--TOPLINE CE SCORES

WITH SQ AS
(SELECT
   c.FSCL_YR_NUM
  ,c.FSCL_QTR_IN_YR_NUM
  --,ce.STORE_NUM

  -- Compute top box scores for each question
  ,CASE WHEN COUNT(CASE WHEN ce.QSTN_ID = 'Q2_2' THEN ce.QSTN_ID END) = 0 THEN NULL
   ELSE TO_CHAR(SUM(CASE WHEN ce.RSPNS_ID = '7' AND ce.QSTN_ID = 'Q2_2' THEN 1 ELSE 0 END)
    / COUNT(CASE WHEN ce.QSTN_ID = 'Q2_2' THEN ce.QSTN_ID END),'0.0000') END
   AS CC
  ,CASE WHEN COUNT(CASE WHEN ce.QSTN_ID = 'Q2_1' THEN ce.QSTN_ID END) = 0 THEN NULL
   ELSE TO_CHAR(SUM(CASE WHEN ce.RSPNS_ID = '7' AND ce.QSTN_ID = 'Q2_1' THEN 1 ELSE 0 END)
    / COUNT(CASE WHEN ce.QSTN_ID = 'Q2_1' THEN ce.QSTN_ID END),'0.0000') END
   AS SPEED
  ,CASE WHEN COUNT(CASE WHEN ce.QSTN_ID = 'Q2_3' THEN ce.QSTN_ID END) = 0 THEN NULL
   ELSE TO_CHAR(SUM(CASE WHEN ce.RSPNS_ID = '7' AND ce.QSTN_ID = 'Q2_3' THEN 1 ELSE 0 END)
    / COUNT(CASE WHEN ce.QSTN_ID = 'Q2_3' THEN ce.QSTN_ID END),'0.0000') END
   AS ABVBEYND
  ,CASE WHEN COUNT(CASE WHEN ce.QSTN_ID = 'Q2_4' THEN ce.QSTN_ID END) = 0 THEN NULL
   ELSE TO_CHAR(SUM(CASE WHEN ce.RSPNS_ID = '7' AND ce.QSTN_ID = 'Q2_4' THEN 1 ELSE 0 END)
    / COUNT(CASE WHEN ce.QSTN_ID = 'Q2_4' THEN ce.QSTN_ID END),'0.0000') END
   AS ACCURACY
  ,CASE WHEN COUNT(CASE WHEN ce.QSTN_ID = 'Q2_5' THEN ce.QSTN_ID END) = 0 THEN NULL
   ELSE TO_CHAR(SUM(CASE WHEN ce.RSPNS_ID = '7' AND ce.QSTN_ID = 'Q2_5' THEN 1 ELSE 0 END)
    / COUNT(CASE WHEN ce.QSTN_ID = 'Q2_5' THEN ce.QSTN_ID END),'0.0000') END
   AS BEVTASTE
  ,CASE WHEN COUNT(CASE WHEN ce.QSTN_ID = 'Q2_6' THEN ce.QSTN_ID END) = 0 THEN NULL
   ELSE TO_CHAR(SUM(CASE WHEN ce.RSPNS_ID = '7' AND ce.QSTN_ID = 'Q2_6' THEN 1 ELSE 0 END)
    / COUNT(CASE WHEN ce.QSTN_ID = 'Q2_6' THEN ce.QSTN_ID END),'0.0000') END
   AS FOODTASTE
  ,CASE WHEN COUNT(CASE WHEN ce.QSTN_ID = 'Q2_7' THEN ce.QSTN_ID END) = 0 THEN NULL
   ELSE TO_CHAR(SUM(CASE WHEN ce.RSPNS_ID = '7' AND ce.QSTN_ID = 'Q2_7' THEN 1 ELSE 0 END)
    / COUNT(CASE WHEN ce.QSTN_ID = 'Q2_7' THEN ce.QSTN_ID END),'0.0000') END
   AS CLEAN

FROM APPDWH.AFT_CV_SRVY_RSPNS ce

  INNER JOIN APPDWH.ADT_CAL c
    ON TRUNC(ce.TRANS_DTM) = c.CAL_DT
      AND c.FSCL_YR_NUM IN (2017,2018)
      AND c.FSCL_QTR_IN_YR_NUM IN (2)
      
  INNER JOIN APPDWH.ADT_STORE org
      ON ce.STORE_NUM = org.STORE_NUM
         AND org.OWNR_TYPE_CD IN ('CO')
         AND org.CNTRY_CD IN ('US')

WHERE ce.RSPNS_ID <> '9'  -- rspns_id = 9 for unanswered questions
  AND ce.STORE_NUM IN (51248,50409,51408,9353,11047,26717,26814,2855,11789,10363,10364,9475,21750,9558,9266,
  2680,10556,2672,8950,10953,10446,7926,11352,8951,23870)

GROUP BY
   c.FSCL_YR_NUM
  --,ce.STORE_NUM
  ,c.FSCL_QTR_IN_YR_NUM
  ), SQ2 AS(
SELECT     
    SQ.FSCL_QTR_IN_YR_NUM
    ,SQ.FSCL_YR_NUM
    --,SQ.STORE_NUM
    ,SQ.CC
    ,SQ.SPEED
    ,SQ.ABVBEYND
    ,SQ.ACCURACY
    ,SQ.BEVTASTE
    ,SQ.FOODTASTE   
    ,SQ.CLEAN
    ,ROUND((AVG(SQ.SPEED)+AVG(SQ.ABVBEYND)+AVG(SQ.ACCURACY)+AVG(SQ.BEVTASTE)+AVG(SQ.FOODTASTE)+AVG(SQ.CLEAN))/6,4) AS STOREOPS
FROM SQ
GROUP BY
    SQ.FSCL_YR_NUM
    ,SQ.FSCL_QTR_IN_YR_NUM
    ,SQ.CC
    ,SQ.SPEED
    ,SQ.ABVBEYND
    ,SQ.ACCURACY
    ,SQ.BEVTASTE
    ,SQ.FOODTASTE   
    ,SQ.CLEAN
    --,SQ.STORE_NUM
Order BY
    --SQ.STORE_NUM
    SQ.FSCL_YR_NUM DESC), SQ3 AS(
SELECT
    SQ2.FSCL_YR_NUM
    --,SQ2.STORE_NUM
    ,SQ2.FSCL_QTR_IN_YR_NUM
    ,SQ2.CC
    ,SQ2.CC - lag(SQ2.CC) over(order by SQ2.FSCL_YR_NUM) AS CC_YOY
    ,SQ2.STOREOPS
    ,SQ2.STOREOPS - lag(SQ2.STOREOPS) over(order by SQ2.FSCL_YR_NUM) AS STOREOPS_YOY
    ,SQ2.SPEED
    ,SQ2.SPEED - lag(SQ2.SPEED) over(order by SQ2.FSCL_YR_NUM)  AS SPEED_YOY
    ,SQ2.ABVBEYND
    ,SQ2.ABVBEYND - lag(SQ2.ABVBEYND) over(order by SQ2.FSCL_YR_NUM)  AS ABVBEYND_YOY
    ,SQ2.ACCURACY
    ,SQ2.ACCURACY - lag(SQ2.ACCURACY) over(order by SQ2.FSCL_YR_NUM)  AS ACCURACY_YOY
    ,SQ2.BEVTASTE
    ,SQ2.BEVTASTE - lag(SQ2.BEVTASTE) over(order by SQ2.FSCL_YR_NUM)  AS BEVTASTE_YOY
    ,SQ2.FOODTASTE
    ,SQ2.FOODTASTE - lag(SQ2.FOODTASTE) over(order by SQ2.FSCL_YR_NUM)  AS FOODTASTE_YOY
    ,SQ2.CLEAN
    ,SQ2.CLEAN - lag(SQ2.CLEAN) over(order by SQ2.FSCL_YR_NUM)  AS CLEAN_YOY

FROM SQ2
GROUP BY 
    SQ2.FSCL_YR_NUM
    --,SQ2.STORE_NUM
    ,SQ2.FSCL_QTR_IN_YR_NUM
    ,SQ2.CC
    ,SQ2.STOREOPS
    ,SQ2.SPEED
    ,SQ2.ABVBEYND
    ,SQ2.ACCURACY
    ,SQ2.BEVTASTE
    ,SQ2.FOODTASTE   
    ,SQ2.CLEAN   
    
ORDER BY
    --SQ2.STORE_NUM
    SQ2.FSCL_YR_NUM DESC)
SELECT
    --SQ3.STORE_NUM
    SQ3.FSCL_YR_NUM
    ,SQ3.CC
    ,SQ3.CC_YOY
    ,SQ3.STOREOPS
    ,SQ3.STOREOPS_YOY
    ,SQ3.SPEED    
    ,SQ3.SPEED_YOY
    ,SQ3.ABVBEYND
    ,SQ3.ABVBEYND_YOY
    ,SQ3.ACCURACY
    ,SQ3.ACCURACY_YOY
    ,SQ3.BEVTASTE
    ,SQ3.BEVTASTE_YOY
    ,SQ3.FOODTASTE   
    ,SQ3.FOODTASTE_YOY  
    ,SQ3.CLEAN 
    ,SQ3.CLEAN_YOY 
FROM SQ3
    WHERE SQ3.FSCL_YR_NUM = 2018
    
    
    
--PEAK CE SCORES

WITH SQ AS
(SELECT
   c.FSCL_YR_NUM
  ,c.FSCL_QTR_IN_YR_NUM
  --,ce.STORE_NUM

  -- Compute top box scores for each question
  ,CASE WHEN COUNT(CASE WHEN ce.QSTN_ID = 'Q2_2' THEN ce.QSTN_ID END) = 0 THEN NULL
   ELSE TO_CHAR(SUM(CASE WHEN ce.RSPNS_ID = '7' AND ce.QSTN_ID = 'Q2_2' THEN 1 ELSE 0 END)
    / COUNT(CASE WHEN ce.QSTN_ID = 'Q2_2' THEN ce.QSTN_ID END),'0.0000') END
   AS PEAKCC
  ,CASE WHEN COUNT(CASE WHEN ce.QSTN_ID = 'Q2_1' THEN ce.QSTN_ID END) = 0 THEN NULL
   ELSE TO_CHAR(SUM(CASE WHEN ce.RSPNS_ID = '7' AND ce.QSTN_ID = 'Q2_1' THEN 1 ELSE 0 END)
    / COUNT(CASE WHEN ce.QSTN_ID = 'Q2_1' THEN ce.QSTN_ID END),'0.0000') END
   AS PEAKSPEED
  ,CASE WHEN COUNT(CASE WHEN ce.QSTN_ID = 'Q2_3' THEN ce.QSTN_ID END) = 0 THEN NULL
   ELSE TO_CHAR(SUM(CASE WHEN ce.RSPNS_ID = '7' AND ce.QSTN_ID = 'Q2_3' THEN 1 ELSE 0 END)
    / COUNT(CASE WHEN ce.QSTN_ID = 'Q2_3' THEN ce.QSTN_ID END),'0.0000') END
   AS PEAKABVBEYND
  ,CASE WHEN COUNT(CASE WHEN ce.QSTN_ID = 'Q2_4' THEN ce.QSTN_ID END) = 0 THEN NULL
   ELSE TO_CHAR(SUM(CASE WHEN ce.RSPNS_ID = '7' AND ce.QSTN_ID = 'Q2_4' THEN 1 ELSE 0 END)
    / COUNT(CASE WHEN ce.QSTN_ID = 'Q2_4' THEN ce.QSTN_ID END),'0.0000') END
   AS PEAKACCURACY
  ,CASE WHEN COUNT(CASE WHEN ce.QSTN_ID = 'Q2_5' THEN ce.QSTN_ID END) = 0 THEN NULL
   ELSE TO_CHAR(SUM(CASE WHEN ce.RSPNS_ID = '7' AND ce.QSTN_ID = 'Q2_5' THEN 1 ELSE 0 END)
    / COUNT(CASE WHEN ce.QSTN_ID = 'Q2_5' THEN ce.QSTN_ID END),'0.0000') END
   AS PEAKBEVTASTE
  ,CASE WHEN COUNT(CASE WHEN ce.QSTN_ID = 'Q2_6' THEN ce.QSTN_ID END) = 0 THEN NULL
   ELSE TO_CHAR(SUM(CASE WHEN ce.RSPNS_ID = '7' AND ce.QSTN_ID = 'Q2_6' THEN 1 ELSE 0 END)
    / COUNT(CASE WHEN ce.QSTN_ID = 'Q2_6' THEN ce.QSTN_ID END),'0.0000') END
   AS PEAKFOODTASTE
  ,CASE WHEN COUNT(CASE WHEN ce.QSTN_ID = 'Q2_7' THEN ce.QSTN_ID END) = 0 THEN NULL
   ELSE TO_CHAR(SUM(CASE WHEN ce.RSPNS_ID = '7' AND ce.QSTN_ID = 'Q2_7' THEN 1 ELSE 0 END)
    / COUNT(CASE WHEN ce.QSTN_ID = 'Q2_7' THEN ce.QSTN_ID END),'0.0000') END
   AS PEAKCLEAN

FROM APPDWH.AFT_CV_SRVY_RSPNS ce

  INNER JOIN APPDWH.ADT_CAL c
    ON TRUNC(ce.TRANS_DTM) = c.CAL_DT
      AND c.FSCL_YR_NUM IN (2017,2018)
      AND c.FSCL_QTR_IN_YR_NUM IN (2)
      
  INNER JOIN APPDWH.ADT_STORE org
      ON ce.STORE_NUM = org.STORE_NUM
         AND org.OWNR_TYPE_CD IN ('CO')
         AND org.CNTRY_CD IN ('US')

WHERE ce.RSPNS_ID <> '9'  -- rspns_id = 9 for unanswered questions
  AND ce.STORE_NUM IN (51248,50409,51408,9353,11047,26717,26814,2855,11789,10363,10364,9475,21750,9558,9266,
  2680,10556,2672,8950,10953,10446,7926,11352,8951,23870)
  AND (TO_CHAR(ce.TRANS_DTM, 'HH24') >=7 AND TO_CHAR(ce.TRANS_DTM, 'HH24') < 11)

GROUP BY
   c.FSCL_YR_NUM
  ,c.FSCL_QTR_IN_YR_NUM
  --,ce.STORE_NUM
  ), SQ2 AS(
SELECT     
    SQ.FSCL_QTR_IN_YR_NUM
    ,SQ.FSCL_YR_NUM
    --,SQ.STORE_NUM
    ,SQ.PEAKCC
    ,SQ.PEAKSPEED
    ,SQ.PEAKABVBEYND
    ,SQ.PEAKACCURACY
    ,SQ.PEAKBEVTASTE
    ,SQ.PEAKFOODTASTE   
    ,SQ.PEAKCLEAN
    ,ROUND((AVG(SQ.PEAKSPEED)+AVG(SQ.PEAKABVBEYND)+AVG(SQ.PEAKACCURACY)+AVG(SQ.PEAKBEVTASTE)+AVG(SQ.PEAKFOODTASTE)+AVG(SQ.PEAKCLEAN))/6,4) AS PEAKSTOREOPS
FROM SQ
GROUP BY
    SQ.FSCL_YR_NUM
    ,SQ.FSCL_QTR_IN_YR_NUM
    ,SQ.PEAKCC
    ,SQ.PEAKSPEED
    ,SQ.PEAKABVBEYND
    ,SQ.PEAKACCURACY
    ,SQ.PEAKBEVTASTE
    ,SQ.PEAKFOODTASTE   
    ,SQ.PEAKCLEAN
    --,SQ.STORE_NUM
Order BY
    --SQ.STORE_NUM
    SQ.FSCL_YR_NUM DESC), SQ3 AS(
SELECT
    SQ2.FSCL_YR_NUM
    --,SQ2.STORE_NUM
    ,SQ2.FSCL_QTR_IN_YR_NUM
    ,SQ2.PEAKCC
    ,SQ2.PEAKCC - lag(SQ2.PEAKCC) over(order by SQ2.FSCL_YR_NUM)  AS PEAKCC_YOY
    ,SQ2.PEAKSTOREOPS
    ,SQ2.PEAKSTOREOPS - lag(SQ2.PEAKSTOREOPS) over(order by SQ2.FSCL_YR_NUM)  AS PEAKSTOREOPS_YOY
    ,SQ2.PEAKSPEED
    ,SQ2.PEAKSPEED - lag(SQ2.PEAKSPEED) over(order by SQ2.FSCL_YR_NUM)  AS PEAKSPEED_YOY
    ,SQ2.PEAKABVBEYND
    ,SQ2.PEAKABVBEYND - lag(SQ2.PEAKABVBEYND) over(order by SQ2.FSCL_YR_NUM)  AS PEAKABVBEYND_YOY
    ,SQ2.PEAKACCURACY
    ,SQ2.PEAKACCURACY - lag(SQ2.PEAKACCURACY) over(order by SQ2.FSCL_YR_NUM)  AS PEAKACCURACY_YOY
    ,SQ2.PEAKBEVTASTE
    ,SQ2.PEAKBEVTASTE - lag(SQ2.PEAKBEVTASTE)over(order by SQ2.FSCL_YR_NUM)  AS PEAKBEVTASTE_YOY
    ,SQ2.PEAKFOODTASTE
    ,SQ2.PEAKFOODTASTE - lag(SQ2.PEAKFOODTASTE) over(order by SQ2.FSCL_YR_NUM)  AS PEAKFOODTASTE_YOY
    ,SQ2.PEAKCLEAN
    ,SQ2.PEAKCLEAN - lag(SQ2.PEAKCLEAN) over(order by SQ2.FSCL_YR_NUM)  AS PEAKCLEAN_YOY

FROM SQ2
GROUP BY 
    SQ2.FSCL_YR_NUM
    --,SQ2.STORE_NUM
    ,SQ2.FSCL_QTR_IN_YR_NUM
    ,SQ2.PEAKCC
    ,SQ2.PEAKSTOREOPS
    ,SQ2.PEAKSPEED
    ,SQ2.PEAKABVBEYND
    ,SQ2.PEAKACCURACY
    ,SQ2.PEAKBEVTASTE
    ,SQ2.PEAKFOODTASTE   
    ,SQ2.PEAKCLEAN   
    
ORDER BY
    --SQ2.STORE_NUM
    SQ2.FSCL_YR_NUM DESC)
SELECT
    --SQ3.STORE_NUM
    SQ3.PEAKCC
    ,SQ3.PEAKCC_YOY
    ,SQ3.PEAKSTOREOPS
    ,SQ3.PEAKSTOREOPS_YOY
    ,SQ3.PEAKSPEED    
    ,SQ3.PEAKSPEED_YOY
    ,SQ3.PEAKABVBEYND
    ,SQ3.PEAKABVBEYND_YOY
    ,SQ3.PEAKACCURACY
    ,SQ3.PEAKACCURACY_YOY
    ,SQ3.PEAKBEVTASTE
    ,SQ3.PEAKBEVTASTE_YOY
    ,SQ3.PEAKFOODTASTE   
    ,SQ3.PEAKFOODTASTE_YOY  
    ,SQ3.PEAKCLEAN 
    ,SQ3.PEAKCLEAN_YOY 
FROM SQ3
    WHERE SQ3.FSCL_YR_NUM = 2018
    
    
    
    
/* CE by channel -- CAW */ 
/*
SELECT DISTINCT
  --sr.STORE_NUM
  sr.QSTN_ID
  ,ca.FSCL_YR_NUM
  ,ca.FSCL_QTR_IN_YR_NUM
  ,tt.ORD_MTHD_CD
  ,SUM(CASE  WHEN sr.RSPNS_ID = '5' AND sr.QSTN_ID = 'Q1' THEN COALESCE(w.WEIGHT_RT,1)
    WHEN sr.RSPNS_ID = '7' THEN COALESCE(w.WEIGHT_RT,1) ELSE 0 END) AS TOTAL_TB
  ,SUM(COALESCE(w.WEIGHT_RT,1)) AS TOTAL_RSPNS
  ,ROUND((SUM(CASE  WHEN sr.RSPNS_ID = '5' AND sr.QSTN_ID = 'Q1' THEN COALESCE(w.WEIGHT_RT,1) WHEN sr.RSPNS_ID = '7' THEN COALESCE(w.WEIGHT_RT,1) ELSE 0 END)) / SUM(COALESCE(w.WEIGHT_RT,1)),4) AS TB_SCORE
  
FROM APPOTHER.AFT_CV_SRVY_RSPNS sr

JOIN APPCA.D_CAL ca
  ON ca.CAL_DT = TRUNC(sr.TRANS_DTM)
  
JOIN APPCA.D_STORE_VERS st
  ON sr.STORE_NUM = st.STORE_NUM
    AND st.CURRENT_FLG = 'Y'
    AND st.OWNR_TYPE_CD IN ('CO')
    AND st.CNTRY_CD_2_DGT_ISO IN ('US')
    AND sr.STORE_NUM IN (51248,50409,51408,9353,11047,26717,26814,2855,11789,10363,10364,9475,21750,9558,9266,
  2680,10556,2672,8950,10953,10446,7926,11352,8951,23870)

LEFT JOIN APPOTHER.CUST_INS_WEIGHTS w
  ON sr.CASE_ID = w.CASE_ID

JOIN APPCA.F_POS_LINE_ITEM pi
  ON TO_CHAR(sr.TRANS_DTM, 'YYYYMMDD') || TRIM(TO_CHAR(sr.STORE_NUM, '000000'))
      || TRIM(TO_CHAR(SUBSTR(sr.RGSTR_NUM, -1, 2),'00')) || sr.TRANS_ID = pi.TRANS_ID

JOIN APPCA.D_POS_LINE_ITEM_TRANS_TYPE tt
  ON pi.POS_LINE_ITEM_TRANS_TYPE_KEY = tt.POS_LINE_ITEM_TRANS_TYPE_KEY
  WHERE tt.ORD_MTHD_CD IN ('CAFE','MOP','OTW')
  AND sr.QSTN_ID IN ('Q2_1','Q2_2','Q2_3','Q2_4','Q2_5','Q2_6','Q2_7')
  AND sr.RSPNS_ID <> '9'
  AND ca.FSCL_YR_NUM = 2018
  AND ca.FSCL_QTR_IN_YR_NUM = 2
      
GROUP BY
  --sr.STORE_NUM
  sr.QSTN_ID
  ,ca.FSCL_YR_NUM
  ,ca.FSCL_QTR_IN_YR_NUM
  ,tt.ORD_MTHD_CD

ORDER BY
  tt.ORD_MTHD_CD
  ,sr.QSTN_ID
*/
  
  
--Channel mix by store
--416

SELECT
  --ss.STORE_NUM
  --ss.DRIVE_THRU_IND
  ROUND(COUNT(CASE WHEN ss.DRIVE_THRU_IND = 1 THEN ss.DRIVE_THRU_IND END) / COUNT(CASE WHEN ss.DRIVE_THRU_IND BETWEEN 0 AND 1 THEN ss.DRIVE_THRU_IND END),3) AS DT_PCT
  ,ca.FSCL_YR_NUM
  ,ca.FSCL_QTR_IN_YR_NUM
  ,COUNT(DISTINCT tr.TRANS_ID) AS TTL_TRANS_CNT
  --,COUNT(DISTINCT CASE WHEN ty.ORD_MTHD_CD = 'MOP' THEN tr.TRANS_ID END) AS MOP_TRANS_CNT
  --,COUNT(DISTINCT CASE WHEN ty.ORD_MTHD_CD = 'OTW' THEN tr.TRANS_ID END) AS OTW_TRANS_CNT
  ,ROUND(COUNT(DISTINCT CASE WHEN tr.TRANS_END_TM_KEY BETWEEN 70000 AND 95959 AND ty.ORD_MTHD_CD = 'MOP' THEN tr.TRANS_ID END) / COUNT(DISTINCT tr.TRANS_ID),4) AS MOP_PCT
  ,ROUND(COUNT(DISTINCT CASE WHEN tr.TRANS_END_TM_KEY BETWEEN 70000 AND 95959 AND ty.ORD_MTHD_CD = 'MOP' THEN tr.TRANS_ID END) / COUNT(DISTINCT CASE WHEN tr.TRANS_END_TM_KEY BETWEEN 70000 AND 95959 THEN tr.TRANS_ID END),4) AS PEAK_MOP_PCT
  ,ROUND(COUNT(DISTINCT CASE WHEN tr.TRANS_END_TM_KEY BETWEEN 70000 AND 95959 AND ty.ORD_MTHD_CD = 'OTW' THEN tr.TRANS_ID END) / COUNT(DISTINCT tr.TRANS_ID),4) AS OTW_PCT
  ,ROUND(COUNT(DISTINCT CASE WHEN tr.TRANS_END_TM_KEY BETWEEN 70000 AND 95959 AND ty.ORD_MTHD_CD = 'OTW' THEN tr.TRANS_ID END) / COUNT(DISTINCT CASE WHEN tr.TRANS_END_TM_KEY BETWEEN 70000 AND 95959 THEN tr.TRANS_ID END),4) AS PEAK_OTW_PCT

FROM APPCA.F_POS_HDR tr

INNER JOIN D_POS_HDR_TRANS_TYPE ty
  ON tr.POS_HDR_TRANS_TYPE_KEY = ty.POS_HDR_TRANS_TYPE_KEY
  
INNER JOIN APPCA.D_STORE_VERS ss
  ON ss.STORE_VERS_KEY = tr.STORE_VERS_KEY
  
INNER JOIN APPCA.D_CAL ca
  ON tr.BUS_DT = ca.CAL_DT

WHERE tr.CNTRY_CD = 'US'
  AND ss.OWNR_TYPE_CD = 'CO'
  AND ca.FSCL_YR_NUM = 2018 AND ca.FSCL_QTR_IN_YR_NUM = 2
  AND ss.STORE_NUM IN (51248,50409,51408,9353,11047,26717,26814,2855,11789,10363,10364,9475,21750,9558,9266,
  2680,10556,2672,8950,10953,10446,7926,11352,8951,23870)

GROUP BY
  --ss.STORE_NUM
  ca.FSCL_YR_NUM
  ,ca.FSCL_QTR_IN_YR_NUM
  --,ss.DRIVE_THRU_IND
  
  
  
--PARTNER TENURE AND STORE

WITH prtnr AS 
(SELECT DISTINCT
      SAP_PRTNR_ID
      ,ORIG_HIRE_DT
      ,MOST_RECENT_HIRE_DT
      FROM D_PRTNR_VERS
      WHERE EMP_STAT_CD = 'Active'
 ) SELECT 
      prtnr.SAP_PRTNR_ID AS PRTNR_NUM
      ,prtnr.ORIG_HIRE_DT
      ,prtnr.MOST_RECENT_HIRE_DT
      ,gls.STORE_NUM
      ,gls.JOB_ID

FROM prtnr

INNER JOIN (
  SELECT * FROM (
    SELECT PRTNR_NUM, STORE_NUM, JOB_ID,
    ROW_NUMBER() OVER (PARTITION BY PRTNR_NUM ORDER BY END_DTM DESC) AS mostrec
    FROM APPDWH.AFT_GLS_PRTNR_TMCARD@SBP411  
    WHERE CNTRY_CD = 'US'
      AND BUS_DT BETWEEN '01-JAN-18' AND '01-APR-18'
      AND JOB_ID IN (50000362,50000358,50000117)
      AND STORE_NUM IN (51248,50409,51408,9353,11047,26717,26814,2855,11789,10363,10364,9475,21750,9558,9266,
  2680,10556,2672,8950,10953,10446,7926,11352,8951,23870)
    ) WHERE mostrec = 1
  ) gls 
  
ON prtnr.SAP_PRTNR_ID = gls.PRTNR_NUM


--PULSE    
--SBP415 (PDW)

SELECT 
--COUNT(CASE WHEN sr.QUESTION_ID = 'Q1' THEN sr.QUESTION_ID END) AS Q1_RESP
--, SUM(CASE WHEN sr.RESP_ID = '7' AND sr.QUESTION_ID = 'Q1' THEN 1 ELSE 0 END) AS Q1_TB
ROUND(AVG(CASE WHEN sr.QUESTION_ID = 'Q1' THEN sr.RESP_ID END),2) AS Q1_AVG
, p.JOB_ROLE

FROM APPSTG.SRV_RESPONSES_STG sr
  
LEFT JOIN (
   SELECT * FROM (
    SELECT gls1.PRTNR_ID, gls1.STORE_NUM, gls1.JOB_ABBREV_NM,
    ROW_NUMBER() OVER (PARTITION BY gls1.PRTNR_ID ORDER BY gls1.ETL_INSERT_DTM DESC) AS mostrec,
    CASE WHEN gls1.JOB_ABBREV_NM IN ('barista','shift supv','attendant') THEN 'HOURLY' 
         WHEN gls1.JOB_ABBREV_NM IN ('st manager') THEN 'SM' END AS JOB_ROLE
    FROM APPSTG.SRV_ACTIVE_PARTNERS_STG gls1
    JOIN ADV_STORE str
        on str.STORE_NUM = gls1.STORE_NUM
        --AND str.OWNR_TYPE_CD IN ('CO') AND str.CNTRY_CD IN ('US')
        AND str.STORE_NUM IN (51248,50409,51408,9353,11047,26717,26814,2855,11789,10363,10364,9475,21750,9558,9266,
  2680,10556,2672,8950,10953,10446,7926,11352,8951,23870)
    WHERE gls1.JOB_ABBREV_NM IN ('barista','shift supv','attendant','st manager')
    ) WHERE mostrec = 1
  ) p
ON sr.PRTNR_ID = p.PRTNR_ID

WHERE sr.QUESTION_ID = 'Q1'
GROUP BY p.JOB_ROLE

--415
--SM Stability

SELECT
s.FSCL_PER_BEG_DT
--s.ORG_UNIT_NUM,
--s.STORE_NUM,
,ROUND(COUNT(CASE WHEN s.SM1YRSTABLE = 1 THEN s.SM1YRSTABLE END) / COUNT(CASE WHEN s.SM1YRSTABLE BETWEEN 0 AND 1 THEN s.SM1YRSTABLE END),3) AS SM1YRSTABLE_PCT
,ROUND(COUNT(CASE WHEN s.SM2YRSTABLE = 1 THEN s.SM2YRSTABLE END) / COUNT(CASE WHEN s.SM2YRSTABLE BETWEEN 0 AND 1 THEN s.SM2YRSTABLE END),3) AS SM2YRSTABLE_PCT

FROM LRIVERS.STOREMANAGERSTABILITY s

/* get most recent rolling 12 report (table updates once per month) */
WHERE s.FSCL_PER_BEG_DT = (select max(FSCL_PER_BEG_DT) from LRIVERS.STOREMANAGERSTABILITY)

AND s.STORE_NUM IN (51248,50409,51408,9353,11047,26717,26814,2855,11789,10363,10364,9475,21750,9558,9266,
  2680,10556,2672,8950,10953,10446,7926,11352,8951,23870)

GROUP BY
s.FSCL_PER_BEG_DT
--s.ORG_UNIT_NUM,
--s.STORE_NUM,
--s.SM1YRSTABLE,
--s.SM2YRSTABLE



--/* CAW */
--/* % home store customers */

SELECT
  T3.FSCL_YR_NUM
  --,SUM(CASE WHEN T2.HOME_STORE = T3.STORE_NUM THEN 1 ELSE NULL END) AS HS_CUST_COUNT
  --,COUNT(DISTINCT T2.GUID_ID) AS ALL_CUST_COUNT
  ,ROUND(SUM(CASE WHEN T2.HOME_STORE = T3.STORE_NUM THEN 1 ELSE NULL END) / COUNT(DISTINCT T2.GUID_ID),4) AS HS_CUST_PCT
FROM(
    --LIST OF ALL ACTIVE STORES AND GUIDS WHO VISITED THOSE STORES DURING THE GIVEN TIME PERIOD
    SELECT
       STR.STORE_NUM
      ,ca.FSCL_YR_NUM
      ,POSH2.GUID_ID
    FROM APPCA.F_POS_HDR POSH2
    LEFT OUTER JOIN APPCA.D_STORE_VERS STR
      ON POSH2.STORE_VERS_KEY = STR.STORE_VERS_KEY
    INNER JOIN APPCA.D_CAL ca
      ON POSH2.BUS_DT = ca.CAL_DT
    WHERE STR.OWNR_TYPE_CD = 'CO'
      AND STR.CNTRY_CD_2_DGT_ISO = 'US'
      AND POSH2.GROSS_REV_LCL_AMT > 0
       AND ca.FSCL_YR_NUM IN (2018)
       AND ca.FSCL_QTR_IN_YR_NUM IN (2)
           AND STR.STORE_NUM IN (51248,50409,51408,9353,11047,26717,26814,2855,11789,10363,10364,9475,21750,9558,9266,
  2680,10556,2672,8950,10953,10446,7926,11352,8951,23870)
    GROUP BY
       STR.STORE_NUM
      ,ca.FSCL_YR_NUM
      ,POSH2.GUID_ID
    ) T3
  --JOINING LIST OF GUIDS WHO WERE ACTIVE, THEIR HOMESTORE, TOTAL TRANSACTIONS AND SPEND AT ALL STORES
  INNER JOIN (
    SELECT
       T1.GUID_ID
      ,T1.FSCL_YR_NUM
      ,SUM(CASE WHEN T1.RNK_HS = 1 AND T1.N_TRANS>=3 
         THEN T1.STORE_NUM 
         ELSE NULL 
       END) AS HOME_STORE
      ,SUM(CASE WHEN T1.RNK_HS = 1 AND T1.N_TRANS>=3 
         THEN T1.N_TRANS 
         ELSE NULL 
       END) AS HOME_STORE_VISITS
      ,SUM(CASE WHEN T1.RNK_HS = 1 AND T1.N_TRANS>=3 
         THEN T1.TOT_SPEND 
         ELSE NULL 
       END) AS HOME_STORE_SPEND
      ,SUM(T1.N_TRANS) AS ALL_STORES_VISITS
      ,SUM(T1.TOT_SPEND) AS ALL_STORES_SPEND
    FROM(
      --INNER QUERY - ALL GUIDS, STORES THEY VISITED, # TRANSACTIONS AT THOSE STORES AND TOTAL SPEND AT THOSE STORES
      SELECT
         POSH.GUID_ID
        ,STR.STORE_NUM
        ,ca.FSCL_YR_NUM
        ,COUNT(DISTINCT POSH.TRANS_ID) AS N_TRANS
        ,SUM(POSH.GROSS_REV_LCL_AMT) AS TOT_SPEND
        --this ranks each store that the guid has visited by the number of transactions and spend
        ,RANK() OVER(PARTITION BY POSH.GUID_ID, ca.FSCL_YR_NUM 
                  ORDER BY -COUNT(DISTINCT POSH.TRANS_ID), 
                           -SUM(POSH.GROSS_REV_LCL_AMT)
                  ) 
         AS RNK_HS
      FROM APPCA.F_POS_HDR POSH
      LEFT OUTER JOIN APPCA.D_STORE_VERS STR
        ON POSH.STORE_VERS_KEY = STR.STORE_VERS_KEY
      INNER JOIN APPCA.D_CAL ca
        ON POSH.BUS_DT = ca.CAL_DT
      WHERE STR.OWNR_TYPE_CD = 'CO'
        AND STR.CNTRY_CD_2_DGT_ISO = 'US'
        AND POSH.GROSS_REV_LCL_AMT > 0
       AND ca.FSCL_YR_NUM IN (2018)
       AND ca.FSCL_QTR_IN_YR_NUM IN (2)
       AND STR.STORE_NUM IN (51248,50409,51408,9353,11047,26717,26814,2855,11789,10363,10364,9475,21750,9558,9266,
  2680,10556,2672,8950,10953,10446,7926,11352,8951,23870)
        
      GROUP BY
         POSH.GUID_ID
        ,STR.STORE_NUM
        ,ca.FSCL_YR_NUM

    ) T1 --THIS IS THE LIST OF GUIDS AND THEIR HOMESTORE,SPEND ETC
    GROUP BY
       T1.GUID_ID
      ,T1.FSCL_YR_NUM

  ) T2 --THIS IS THE LIST OF ALL STORES AND THEIR CUSTOMERS
ON T2.GUID_ID = T3.GUID_ID
  AND T2.FSCL_YR_NUM = T3.FSCL_YR_NUM

WHERE T2.GUID_ID IS NOT NULL 
  AND T3.GUID_ID IS NOT NULL 
  AND T2.GUID_ID !='0' 
  AND T3.GUID_ID !='0' 

GROUP BY
T3.FSCL_YR_NUM


--411
/* quartlery comps */
/* Comp = (net discounted sales - net discounted sales LY ) / net discounted sales LY */
/* COSD/TSD = customer transactions / day count */

 SELECT ca.FSCL_YR_NUM
        , ca.FSCL_QTR_IN_YR_NUM
        , ROUND((SUM(f.NET_DISCOUNTED_SALES_AMT) - SUM(f.NET_DISCOUNTED_SALES_LY_AMT)) / SUM(f.NET_DISCOUNTED_SALES_LY_AMT),4) AS COMP
        , ROUND(SUM(f.CUST_TRANS_CNT) / SUM(f.ACTIVE_STORE_DAY_CNT),1) AS COSD

    FROM APPBUS.DFT_INTL_STORE_DAY_VW f      
        
        INNER JOIN APPDWH.ADT_STORE org
            ON f.STORE_NUMBER = org.STORE_NUM
            AND org.OWNR_TYPE_CD IN ('CO')
            AND f.STORE_NUMBER IN (51248,50409,51408,9353,11047,26717,26814,2855,11789,10363,10364,9475,21750,9558,9266,
  2680,10556,2672,8950,10953,10446,7926,11352,8951,23870)
        
        INNER JOIN APPDWH.ADT_CAL ca
            ON f.BUSINESS_DATE = ca.CAL_DT
            AND ca.FSCL_YR_NUM in (2018) 
            AND ca.FSCL_QTR_IN_YR_NUM = 2
            
        INNER JOIN APPBUS.AFT_STORE_COMP_PER_VW comp
            ON f.STORE_NUMBER = comp.STORE_NUMBER
            AND ca.FSCL_PER_BEG_DT = comp.FISCAL_PERIOD_BEGIN_DATE
            AND COMP_CODE = 'Y'
    
    GROUP BY ca.FSCL_YR_NUM
    , ca.FSCL_QTR_IN_YR_NUM
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
--TOPLINE CE SCORES -- MID-AMERICA

WITH SQ AS
(SELECT
   c.FSCL_YR_NUM
  ,c.FSCL_QTR_IN_YR_NUM
  --,ce.STORE_NUM

  -- Compute top box scores for each question
  ,CASE WHEN COUNT(CASE WHEN ce.QSTN_ID = 'Q2_2' THEN ce.QSTN_ID END) = 0 THEN NULL
   ELSE TO_CHAR(SUM(CASE WHEN ce.RSPNS_ID = '7' AND ce.QSTN_ID = 'Q2_2' THEN 1 ELSE 0 END)
    / COUNT(CASE WHEN ce.QSTN_ID = 'Q2_2' THEN ce.QSTN_ID END),'0.0000') END
   AS CC
  ,CASE WHEN COUNT(CASE WHEN ce.QSTN_ID = 'Q2_1' THEN ce.QSTN_ID END) = 0 THEN NULL
   ELSE TO_CHAR(SUM(CASE WHEN ce.RSPNS_ID = '7' AND ce.QSTN_ID = 'Q2_1' THEN 1 ELSE 0 END)
    / COUNT(CASE WHEN ce.QSTN_ID = 'Q2_1' THEN ce.QSTN_ID END),'0.0000') END
   AS SPEED
  ,CASE WHEN COUNT(CASE WHEN ce.QSTN_ID = 'Q2_3' THEN ce.QSTN_ID END) = 0 THEN NULL
   ELSE TO_CHAR(SUM(CASE WHEN ce.RSPNS_ID = '7' AND ce.QSTN_ID = 'Q2_3' THEN 1 ELSE 0 END)
    / COUNT(CASE WHEN ce.QSTN_ID = 'Q2_3' THEN ce.QSTN_ID END),'0.0000') END
   AS ABVBEYND
  ,CASE WHEN COUNT(CASE WHEN ce.QSTN_ID = 'Q2_4' THEN ce.QSTN_ID END) = 0 THEN NULL
   ELSE TO_CHAR(SUM(CASE WHEN ce.RSPNS_ID = '7' AND ce.QSTN_ID = 'Q2_4' THEN 1 ELSE 0 END)
    / COUNT(CASE WHEN ce.QSTN_ID = 'Q2_4' THEN ce.QSTN_ID END),'0.0000') END
   AS ACCURACY
  ,CASE WHEN COUNT(CASE WHEN ce.QSTN_ID = 'Q2_5' THEN ce.QSTN_ID END) = 0 THEN NULL
   ELSE TO_CHAR(SUM(CASE WHEN ce.RSPNS_ID = '7' AND ce.QSTN_ID = 'Q2_5' THEN 1 ELSE 0 END)
    / COUNT(CASE WHEN ce.QSTN_ID = 'Q2_5' THEN ce.QSTN_ID END),'0.0000') END
   AS BEVTASTE
  ,CASE WHEN COUNT(CASE WHEN ce.QSTN_ID = 'Q2_6' THEN ce.QSTN_ID END) = 0 THEN NULL
   ELSE TO_CHAR(SUM(CASE WHEN ce.RSPNS_ID = '7' AND ce.QSTN_ID = 'Q2_6' THEN 1 ELSE 0 END)
    / COUNT(CASE WHEN ce.QSTN_ID = 'Q2_6' THEN ce.QSTN_ID END),'0.0000') END
   AS FOODTASTE
  ,CASE WHEN COUNT(CASE WHEN ce.QSTN_ID = 'Q2_7' THEN ce.QSTN_ID END) = 0 THEN NULL
   ELSE TO_CHAR(SUM(CASE WHEN ce.RSPNS_ID = '7' AND ce.QSTN_ID = 'Q2_7' THEN 1 ELSE 0 END)
    / COUNT(CASE WHEN ce.QSTN_ID = 'Q2_7' THEN ce.QSTN_ID END),'0.0000') END
   AS CLEAN

FROM APPDWH.AFT_CV_SRVY_RSPNS ce

  INNER JOIN APPDWH.ADT_CAL c
    ON TRUNC(ce.TRANS_DTM) = c.CAL_DT
      AND c.FSCL_YR_NUM IN (2017,2018)
      AND c.FSCL_QTR_IN_YR_NUM IN (2)
      
  INNER JOIN APPDWH.ADT_STORE org
      ON ce.STORE_NUM = org.STORE_NUM
         AND org.OWNR_TYPE_CD IN ('CO')
         AND org.CNTRY_CD IN ('US')
         AND org.STORE_DEVL_MKT_DESCR IN ('Mid-America')

WHERE ce.RSPNS_ID <> '9'  -- rspns_id = 9 for unanswered questions

GROUP BY
   c.FSCL_YR_NUM
  --,ce.STORE_NUM
  ,c.FSCL_QTR_IN_YR_NUM
  ), SQ2 AS(
SELECT     
    SQ.FSCL_QTR_IN_YR_NUM
    ,SQ.FSCL_YR_NUM
    --,SQ.STORE_NUM
    ,SQ.CC
    ,SQ.SPEED
    ,SQ.ABVBEYND
    ,SQ.ACCURACY
    ,SQ.BEVTASTE
    ,SQ.FOODTASTE   
    ,SQ.CLEAN
    ,ROUND((AVG(SQ.SPEED)+AVG(SQ.ABVBEYND)+AVG(SQ.ACCURACY)+AVG(SQ.BEVTASTE)+AVG(SQ.FOODTASTE)+AVG(SQ.CLEAN))/6,4) AS STOREOPS
FROM SQ
GROUP BY
    SQ.FSCL_YR_NUM
    ,SQ.FSCL_QTR_IN_YR_NUM
    ,SQ.CC
    ,SQ.SPEED
    ,SQ.ABVBEYND
    ,SQ.ACCURACY
    ,SQ.BEVTASTE
    ,SQ.FOODTASTE   
    ,SQ.CLEAN
    --,SQ.STORE_NUM
Order BY
    --SQ.STORE_NUM
    SQ.FSCL_YR_NUM DESC), SQ3 AS(
SELECT
    SQ2.FSCL_YR_NUM
    --,SQ2.STORE_NUM
    ,SQ2.FSCL_QTR_IN_YR_NUM
    ,SQ2.CC
    ,SQ2.CC - lag(SQ2.CC) over(order by SQ2.FSCL_YR_NUM) AS CC_YOY
    ,SQ2.STOREOPS
    ,SQ2.STOREOPS - lag(SQ2.STOREOPS) over(order by SQ2.FSCL_YR_NUM) AS STOREOPS_YOY
    ,SQ2.SPEED
    ,SQ2.SPEED - lag(SQ2.SPEED) over(order by SQ2.FSCL_YR_NUM)  AS SPEED_YOY
    ,SQ2.ABVBEYND
    ,SQ2.ABVBEYND - lag(SQ2.ABVBEYND) over(order by SQ2.FSCL_YR_NUM)  AS ABVBEYND_YOY
    ,SQ2.ACCURACY
    ,SQ2.ACCURACY - lag(SQ2.ACCURACY) over(order by SQ2.FSCL_YR_NUM)  AS ACCURACY_YOY
    ,SQ2.BEVTASTE
    ,SQ2.BEVTASTE - lag(SQ2.BEVTASTE) over(order by SQ2.FSCL_YR_NUM)  AS BEVTASTE_YOY
    ,SQ2.FOODTASTE
    ,SQ2.FOODTASTE - lag(SQ2.FOODTASTE) over(order by SQ2.FSCL_YR_NUM)  AS FOODTASTE_YOY
    ,SQ2.CLEAN
    ,SQ2.CLEAN - lag(SQ2.CLEAN) over(order by SQ2.FSCL_YR_NUM)  AS CLEAN_YOY

FROM SQ2
GROUP BY 
    SQ2.FSCL_YR_NUM
    --,SQ2.STORE_NUM
    ,SQ2.FSCL_QTR_IN_YR_NUM
    ,SQ2.CC
    ,SQ2.STOREOPS
    ,SQ2.SPEED
    ,SQ2.ABVBEYND
    ,SQ2.ACCURACY
    ,SQ2.BEVTASTE
    ,SQ2.FOODTASTE   
    ,SQ2.CLEAN   
    
ORDER BY
    --SQ2.STORE_NUM
    SQ2.FSCL_YR_NUM DESC)
SELECT
    --SQ3.STORE_NUM
    SQ3.FSCL_YR_NUM
    ,SQ3.CC
    ,SQ3.CC_YOY
    ,SQ3.STOREOPS
    ,SQ3.STOREOPS_YOY
    ,SQ3.SPEED    
    ,SQ3.SPEED_YOY
    ,SQ3.ABVBEYND
    ,SQ3.ABVBEYND_YOY
    ,SQ3.ACCURACY
    ,SQ3.ACCURACY_YOY
    ,SQ3.BEVTASTE
    ,SQ3.BEVTASTE_YOY
    ,SQ3.FOODTASTE   
    ,SQ3.FOODTASTE_YOY  
    ,SQ3.CLEAN 
    ,SQ3.CLEAN_YOY 
FROM SQ3
    WHERE SQ3.FSCL_YR_NUM = 2018
    
    
    
--PEAK CE SCORES

WITH SQ AS
(SELECT
   c.FSCL_YR_NUM
  ,c.FSCL_QTR_IN_YR_NUM
  --,ce.STORE_NUM

  -- Compute top box scores for each question
  ,CASE WHEN COUNT(CASE WHEN ce.QSTN_ID = 'Q2_2' THEN ce.QSTN_ID END) = 0 THEN NULL
   ELSE TO_CHAR(SUM(CASE WHEN ce.RSPNS_ID = '7' AND ce.QSTN_ID = 'Q2_2' THEN 1 ELSE 0 END)
    / COUNT(CASE WHEN ce.QSTN_ID = 'Q2_2' THEN ce.QSTN_ID END),'0.0000') END
   AS PEAKCC
  ,CASE WHEN COUNT(CASE WHEN ce.QSTN_ID = 'Q2_1' THEN ce.QSTN_ID END) = 0 THEN NULL
   ELSE TO_CHAR(SUM(CASE WHEN ce.RSPNS_ID = '7' AND ce.QSTN_ID = 'Q2_1' THEN 1 ELSE 0 END)
    / COUNT(CASE WHEN ce.QSTN_ID = 'Q2_1' THEN ce.QSTN_ID END),'0.0000') END
   AS PEAKSPEED
  ,CASE WHEN COUNT(CASE WHEN ce.QSTN_ID = 'Q2_3' THEN ce.QSTN_ID END) = 0 THEN NULL
   ELSE TO_CHAR(SUM(CASE WHEN ce.RSPNS_ID = '7' AND ce.QSTN_ID = 'Q2_3' THEN 1 ELSE 0 END)
    / COUNT(CASE WHEN ce.QSTN_ID = 'Q2_3' THEN ce.QSTN_ID END),'0.0000') END
   AS PEAKABVBEYND
  ,CASE WHEN COUNT(CASE WHEN ce.QSTN_ID = 'Q2_4' THEN ce.QSTN_ID END) = 0 THEN NULL
   ELSE TO_CHAR(SUM(CASE WHEN ce.RSPNS_ID = '7' AND ce.QSTN_ID = 'Q2_4' THEN 1 ELSE 0 END)
    / COUNT(CASE WHEN ce.QSTN_ID = 'Q2_4' THEN ce.QSTN_ID END),'0.0000') END
   AS PEAKACCURACY
  ,CASE WHEN COUNT(CASE WHEN ce.QSTN_ID = 'Q2_5' THEN ce.QSTN_ID END) = 0 THEN NULL
   ELSE TO_CHAR(SUM(CASE WHEN ce.RSPNS_ID = '7' AND ce.QSTN_ID = 'Q2_5' THEN 1 ELSE 0 END)
    / COUNT(CASE WHEN ce.QSTN_ID = 'Q2_5' THEN ce.QSTN_ID END),'0.0000') END
   AS PEAKBEVTASTE
  ,CASE WHEN COUNT(CASE WHEN ce.QSTN_ID = 'Q2_6' THEN ce.QSTN_ID END) = 0 THEN NULL
   ELSE TO_CHAR(SUM(CASE WHEN ce.RSPNS_ID = '7' AND ce.QSTN_ID = 'Q2_6' THEN 1 ELSE 0 END)
    / COUNT(CASE WHEN ce.QSTN_ID = 'Q2_6' THEN ce.QSTN_ID END),'0.0000') END
   AS PEAKFOODTASTE
  ,CASE WHEN COUNT(CASE WHEN ce.QSTN_ID = 'Q2_7' THEN ce.QSTN_ID END) = 0 THEN NULL
   ELSE TO_CHAR(SUM(CASE WHEN ce.RSPNS_ID = '7' AND ce.QSTN_ID = 'Q2_7' THEN 1 ELSE 0 END)
    / COUNT(CASE WHEN ce.QSTN_ID = 'Q2_7' THEN ce.QSTN_ID END),'0.0000') END
   AS PEAKCLEAN

FROM APPDWH.AFT_CV_SRVY_RSPNS ce

  INNER JOIN APPDWH.ADT_CAL c
    ON TRUNC(ce.TRANS_DTM) = c.CAL_DT
      AND c.FSCL_YR_NUM IN (2017,2018)
      AND c.FSCL_QTR_IN_YR_NUM IN (2)
      
  INNER JOIN APPDWH.ADT_STORE org
      ON ce.STORE_NUM = org.STORE_NUM
         AND org.OWNR_TYPE_CD IN ('CO')
         AND org.CNTRY_CD IN ('US')
         AND org.STORE_DEVL_MKT_DESCR IN ('Mid-America')

WHERE ce.RSPNS_ID <> '9'  -- rspns_id = 9 for unanswered questions
  AND (TO_CHAR(ce.TRANS_DTM, 'HH24') >=7 AND TO_CHAR(ce.TRANS_DTM, 'HH24') < 11)

GROUP BY
   c.FSCL_YR_NUM
  ,c.FSCL_QTR_IN_YR_NUM
  --,ce.STORE_NUM
  ), SQ2 AS(
SELECT     
    SQ.FSCL_QTR_IN_YR_NUM
    ,SQ.FSCL_YR_NUM
    --,SQ.STORE_NUM
    ,SQ.PEAKCC
    ,SQ.PEAKSPEED
    ,SQ.PEAKABVBEYND
    ,SQ.PEAKACCURACY
    ,SQ.PEAKBEVTASTE
    ,SQ.PEAKFOODTASTE   
    ,SQ.PEAKCLEAN
    ,ROUND((AVG(SQ.PEAKSPEED)+AVG(SQ.PEAKABVBEYND)+AVG(SQ.PEAKACCURACY)+AVG(SQ.PEAKBEVTASTE)+AVG(SQ.PEAKFOODTASTE)+AVG(SQ.PEAKCLEAN))/6,4) AS PEAKSTOREOPS
FROM SQ
GROUP BY
    SQ.FSCL_YR_NUM
    ,SQ.FSCL_QTR_IN_YR_NUM
    ,SQ.PEAKCC
    ,SQ.PEAKSPEED
    ,SQ.PEAKABVBEYND
    ,SQ.PEAKACCURACY
    ,SQ.PEAKBEVTASTE
    ,SQ.PEAKFOODTASTE   
    ,SQ.PEAKCLEAN
    --,SQ.STORE_NUM
Order BY
    --SQ.STORE_NUM
    SQ.FSCL_YR_NUM DESC), SQ3 AS(
SELECT
    SQ2.FSCL_YR_NUM
    --,SQ2.STORE_NUM
    ,SQ2.FSCL_QTR_IN_YR_NUM
    ,SQ2.PEAKCC
    ,SQ2.PEAKCC - lag(SQ2.PEAKCC) over(order by SQ2.FSCL_YR_NUM)  AS PEAKCC_YOY
    ,SQ2.PEAKSTOREOPS
    ,SQ2.PEAKSTOREOPS - lag(SQ2.PEAKSTOREOPS) over(order by SQ2.FSCL_YR_NUM)  AS PEAKSTOREOPS_YOY
    ,SQ2.PEAKSPEED
    ,SQ2.PEAKSPEED - lag(SQ2.PEAKSPEED) over(order by SQ2.FSCL_YR_NUM)  AS PEAKSPEED_YOY
    ,SQ2.PEAKABVBEYND
    ,SQ2.PEAKABVBEYND - lag(SQ2.PEAKABVBEYND) over(order by SQ2.FSCL_YR_NUM)  AS PEAKABVBEYND_YOY
    ,SQ2.PEAKACCURACY
    ,SQ2.PEAKACCURACY - lag(SQ2.PEAKACCURACY) over(order by SQ2.FSCL_YR_NUM)  AS PEAKACCURACY_YOY
    ,SQ2.PEAKBEVTASTE
    ,SQ2.PEAKBEVTASTE - lag(SQ2.PEAKBEVTASTE)over(order by SQ2.FSCL_YR_NUM)  AS PEAKBEVTASTE_YOY
    ,SQ2.PEAKFOODTASTE
    ,SQ2.PEAKFOODTASTE - lag(SQ2.PEAKFOODTASTE) over(order by SQ2.FSCL_YR_NUM)  AS PEAKFOODTASTE_YOY
    ,SQ2.PEAKCLEAN
    ,SQ2.PEAKCLEAN - lag(SQ2.PEAKCLEAN) over(order by SQ2.FSCL_YR_NUM)  AS PEAKCLEAN_YOY

FROM SQ2
GROUP BY 
    SQ2.FSCL_YR_NUM
    --,SQ2.STORE_NUM
    ,SQ2.FSCL_QTR_IN_YR_NUM
    ,SQ2.PEAKCC
    ,SQ2.PEAKSTOREOPS
    ,SQ2.PEAKSPEED
    ,SQ2.PEAKABVBEYND
    ,SQ2.PEAKACCURACY
    ,SQ2.PEAKBEVTASTE
    ,SQ2.PEAKFOODTASTE   
    ,SQ2.PEAKCLEAN   
    
ORDER BY
    --SQ2.STORE_NUM
    SQ2.FSCL_YR_NUM DESC)
SELECT
    --SQ3.STORE_NUM
    SQ3.PEAKCC
    ,SQ3.PEAKCC_YOY
    ,SQ3.PEAKSTOREOPS
    ,SQ3.PEAKSTOREOPS_YOY
    ,SQ3.PEAKSPEED    
    ,SQ3.PEAKSPEED_YOY
    ,SQ3.PEAKABVBEYND
    ,SQ3.PEAKABVBEYND_YOY
    ,SQ3.PEAKACCURACY
    ,SQ3.PEAKACCURACY_YOY
    ,SQ3.PEAKBEVTASTE
    ,SQ3.PEAKBEVTASTE_YOY
    ,SQ3.PEAKFOODTASTE   
    ,SQ3.PEAKFOODTASTE_YOY  
    ,SQ3.PEAKCLEAN 
    ,SQ3.PEAKCLEAN_YOY 
FROM SQ3
    WHERE SQ3.FSCL_YR_NUM = 2018
    
    
    
    
/* CE by channel -- CAW */ 
/*
SELECT DISTINCT
  --sr.STORE_NUM
  sr.QSTN_ID
  ,ca.FSCL_YR_NUM
  ,ca.FSCL_QTR_IN_YR_NUM
  ,tt.ORD_MTHD_CD
  ,SUM(CASE  WHEN sr.RSPNS_ID = '5' AND sr.QSTN_ID = 'Q1' THEN COALESCE(w.WEIGHT_RT,1)
    WHEN sr.RSPNS_ID = '7' THEN COALESCE(w.WEIGHT_RT,1) ELSE 0 END) AS TOTAL_TB
  ,SUM(COALESCE(w.WEIGHT_RT,1)) AS TOTAL_RSPNS
  ,ROUND((SUM(CASE  WHEN sr.RSPNS_ID = '5' AND sr.QSTN_ID = 'Q1' THEN COALESCE(w.WEIGHT_RT,1) WHEN sr.RSPNS_ID = '7' THEN COALESCE(w.WEIGHT_RT,1) ELSE 0 END)) / SUM(COALESCE(w.WEIGHT_RT,1)),4) AS TB_SCORE
  
FROM APPOTHER.AFT_CV_SRVY_RSPNS sr

JOIN APPCA.D_CAL ca
  ON ca.CAL_DT = TRUNC(sr.TRANS_DTM)
  
JOIN APPCA.D_STORE_VERS st
  ON sr.STORE_NUM = st.STORE_NUM
    AND st.CURRENT_FLG = 'Y'
    AND st.OWNR_TYPE_CD IN ('CO')
    AND st.CNTRY_CD_2_DGT_ISO IN ('US')
    AND sr.org.STORE_DEVL_MKT_DESCR IN ('Mid-America')
  2680,10556,2672,8950,10953,10446,7926,11352,8951,23870)

LEFT JOIN APPOTHER.CUST_INS_WEIGHTS w
  ON sr.CASE_ID = w.CASE_ID

JOIN APPCA.F_POS_LINE_ITEM pi
  ON TO_CHAR(sr.TRANS_DTM, 'YYYYMMDD') || TRIM(TO_CHAR(sr.STORE_NUM, '000000'))
      || TRIM(TO_CHAR(SUBSTR(sr.RGSTR_NUM, -1, 2),'00')) || sr.TRANS_ID = pi.TRANS_ID

JOIN APPCA.D_POS_LINE_ITEM_TRANS_TYPE tt
  ON pi.POS_LINE_ITEM_TRANS_TYPE_KEY = tt.POS_LINE_ITEM_TRANS_TYPE_KEY
  WHERE tt.ORD_MTHD_CD IN ('CAFE','MOP','OTW')
  AND sr.QSTN_ID IN ('Q2_1','Q2_2','Q2_3','Q2_4','Q2_5','Q2_6','Q2_7')
  AND sr.RSPNS_ID <> '9'
  AND ca.FSCL_YR_NUM = 2018
  AND ca.FSCL_QTR_IN_YR_NUM = 2
      
GROUP BY
  --sr.STORE_NUM
  sr.QSTN_ID
  ,ca.FSCL_YR_NUM
  ,ca.FSCL_QTR_IN_YR_NUM
  ,tt.ORD_MTHD_CD

ORDER BY
  tt.ORD_MTHD_CD
  ,sr.QSTN_ID
*/
  
  
--Channel mix by store
--416

SELECT
  --ss.STORE_NUM
  --ss.DRIVE_THRU_IND
  ROUND(COUNT(CASE WHEN ss.DRIVE_THRU_IND = 1 THEN ss.DRIVE_THRU_IND END) / COUNT(CASE WHEN ss.DRIVE_THRU_IND BETWEEN 0 AND 1 THEN ss.DRIVE_THRU_IND END),3) AS DT_PCT
  ,ca.FSCL_YR_NUM
  ,ca.FSCL_QTR_IN_YR_NUM
  ,COUNT(DISTINCT tr.TRANS_ID) AS TTL_TRANS_CNT
  --,COUNT(DISTINCT CASE WHEN ty.ORD_MTHD_CD = 'MOP' THEN tr.TRANS_ID END) AS MOP_TRANS_CNT
  --,COUNT(DISTINCT CASE WHEN ty.ORD_MTHD_CD = 'OTW' THEN tr.TRANS_ID END) AS OTW_TRANS_CNT
  ,ROUND(COUNT(DISTINCT CASE WHEN tr.TRANS_END_TM_KEY BETWEEN 70000 AND 95959 AND ty.ORD_MTHD_CD = 'MOP' THEN tr.TRANS_ID END) / COUNT(DISTINCT tr.TRANS_ID),4) AS MOP_PCT
  ,ROUND(COUNT(DISTINCT CASE WHEN tr.TRANS_END_TM_KEY BETWEEN 70000 AND 95959 AND ty.ORD_MTHD_CD = 'MOP' THEN tr.TRANS_ID END) / COUNT(DISTINCT CASE WHEN tr.TRANS_END_TM_KEY BETWEEN 70000 AND 95959 THEN tr.TRANS_ID END),4) AS PEAK_MOP_PCT
  ,ROUND(COUNT(DISTINCT CASE WHEN tr.TRANS_END_TM_KEY BETWEEN 70000 AND 95959 AND ty.ORD_MTHD_CD = 'OTW' THEN tr.TRANS_ID END) / COUNT(DISTINCT tr.TRANS_ID),4) AS OTW_PCT
  ,ROUND(COUNT(DISTINCT CASE WHEN tr.TRANS_END_TM_KEY BETWEEN 70000 AND 95959 AND ty.ORD_MTHD_CD = 'OTW' THEN tr.TRANS_ID END) / COUNT(DISTINCT CASE WHEN tr.TRANS_END_TM_KEY BETWEEN 70000 AND 95959 THEN tr.TRANS_ID END),4) AS PEAK_OTW_PCT

FROM APPCA.F_POS_HDR tr

INNER JOIN D_POS_HDR_TRANS_TYPE ty
  ON tr.POS_HDR_TRANS_TYPE_KEY = ty.POS_HDR_TRANS_TYPE_KEY
  
INNER JOIN APPCA.D_STORE_VERS ss
  ON ss.STORE_VERS_KEY = tr.STORE_VERS_KEY
  
INNER JOIN APPCA.D_CAL ca
  ON tr.BUS_DT = ca.CAL_DT

WHERE tr.CNTRY_CD = 'US'
  AND ss.OWNR_TYPE_CD = 'CO'
  AND ca.FSCL_YR_NUM = 2018 AND ca.FSCL_QTR_IN_YR_NUM = 2
  AND ss.RGN_DESCR IN ('MID-AMERICA')

GROUP BY
  --ss.STORE_NUM
  ca.FSCL_YR_NUM
  ,ca.FSCL_QTR_IN_YR_NUM
  --,ss.DRIVE_THRU_IND
  
  
  
--PARTNER TENURE AND STORE

WITH prtnr AS 
(SELECT DISTINCT
      SAP_PRTNR_ID
      ,ORIG_HIRE_DT
      ,MOST_RECENT_HIRE_DT
      FROM D_PRTNR_VERS
      WHERE EMP_STAT_CD = 'Active'
 ) SELECT 
      prtnr.SAP_PRTNR_ID AS PRTNR_NUM
      ,prtnr.ORIG_HIRE_DT
      ,prtnr.MOST_RECENT_HIRE_DT
      ,gls.STORE_NUM
      ,gls.JOB_ID

FROM prtnr

INNER JOIN (
  SELECT * FROM (
    SELECT gls1.PRTNR_NUM, gls1.STORE_NUM, gls1.JOB_ID,
    ROW_NUMBER() OVER (PARTITION BY gls1.PRTNR_NUM ORDER BY gls1.END_DTM DESC) AS mostrec
    FROM APPDWH.AFT_GLS_PRTNR_TMCARD@SBP411 gls1
      JOIN ADV_STORE str
        on gls1.STORE_NUM = str.STORE_NUM
        AND str.STORE_DEVL_MKT_DESCR IN ('Mid-America')
        AND str.OWNR_TYPE_CD IN ('CO')
    WHERE gls1.CNTRY_CD = 'US'
      AND gls1.BUS_DT BETWEEN '01-JAN-18' AND '01-APR-18'
      AND gls1.JOB_ID IN (50000362,50000358,50000117)
    ) WHERE mostrec = 1
  ) gls 
  
ON prtnr.SAP_PRTNR_ID = gls.PRTNR_NUM

--PULSE    
--SBP415 (PDW)

SELECT 
ROUND(AVG(CASE WHEN sr.QUESTION_ID = 'Q1' THEN sr.RESP_ID END),2) AS Q1_AVG
, p.JOB_ROLE

FROM APPSTG.SRV_RESPONSES_STG sr
  
LEFT JOIN (
   SELECT * FROM (
    SELECT gls1.PRTNR_ID, gls1.STORE_NUM, gls1.JOB_ABBREV_NM,
    ROW_NUMBER() OVER (PARTITION BY gls1.PRTNR_ID ORDER BY gls1.ETL_INSERT_DTM DESC) AS mostrec,
    CASE WHEN gls1.JOB_ABBREV_NM IN ('barista','shift supv','attendant') THEN 'HOURLY' 
         WHEN gls1.JOB_ABBREV_NM IN ('st manager') THEN 'SM' END AS JOB_ROLE
    FROM APPSTG.SRV_ACTIVE_PARTNERS_STG gls1
    JOIN ADV_STORE str
        on str.STORE_NUM = gls1.STORE_NUM
        AND str.OWNR_TYPE_CD IN ('CO') AND str.CNTRY_CD IN ('US')
        AND str.STORE_DEVL_MKT_DESCR IN ('Mid-America')
    WHERE gls1.JOB_ABBREV_NM IN ('barista','shift supv','attendant','st manager')
    ) WHERE mostrec = 1
  ) p
ON sr.PRTNR_ID = p.PRTNR_ID

WHERE sr.QUESTION_ID = 'Q1'
GROUP BY p.JOB_ROLE

--415
--SM Stability

SELECT
s.FSCL_PER_BEG_DT
--s.ORG_UNIT_NUM,
--s.STORE_NUM,
,ROUND(COUNT(CASE WHEN s.SM1YRSTABLE = 1 THEN s.SM1YRSTABLE END) / COUNT(CASE WHEN s.SM1YRSTABLE BETWEEN 0 AND 1 THEN s.SM1YRSTABLE END),3) AS SM1YRSTABLE_PCT
,ROUND(COUNT(CASE WHEN s.SM2YRSTABLE = 1 THEN s.SM2YRSTABLE END) / COUNT(CASE WHEN s.SM2YRSTABLE BETWEEN 0 AND 1 THEN s.SM2YRSTABLE END),3) AS SM2YRSTABLE_PCT

FROM LRIVERS.STOREMANAGERSTABILITY s

LEFT JOIN ADV_STORE str
    on s.STORE_NUM = str.STORE_NUM
    AND str.STORE_DEVL_MKT_DESCR IN ('Mid-America')
    AND str.OWNR_TYPE_CD IN ('CO')

/* get most recent rolling 12 report (table updates once per month) */
WHERE s.FSCL_PER_BEG_DT = (select max(FSCL_PER_BEG_DT) from LRIVERS.STOREMANAGERSTABILITY)

GROUP BY
s.FSCL_PER_BEG_DT
--s.ORG_UNIT_NUM,
--s.STORE_NUM,
--s.SM1YRSTABLE,
--s.SM2YRSTABLE



--/* CAW */
--/* % home store customers */

SELECT
  T3.FSCL_YR_NUM
  --,SUM(CASE WHEN T2.HOME_STORE = T3.STORE_NUM THEN 1 ELSE NULL END) AS HS_CUST_COUNT
  --,COUNT(DISTINCT T2.GUID_ID) AS ALL_CUST_COUNT
  ,ROUND(SUM(CASE WHEN T2.HOME_STORE = T3.STORE_NUM THEN 1 ELSE NULL END) / COUNT(DISTINCT T2.GUID_ID),4) AS HS_CUST_PCT
FROM(
    --LIST OF ALL ACTIVE STORES AND GUIDS WHO VISITED THOSE STORES DURING THE GIVEN TIME PERIOD
    SELECT
       STR.STORE_NUM
      ,ca.FSCL_YR_NUM
      ,POSH2.GUID_ID
    FROM APPCA.F_POS_HDR POSH2
    LEFT OUTER JOIN APPCA.D_STORE_VERS STR
      ON POSH2.STORE_VERS_KEY = STR.STORE_VERS_KEY
    INNER JOIN APPCA.D_CAL ca
      ON POSH2.BUS_DT = ca.CAL_DT
    WHERE STR.OWNR_TYPE_CD = 'CO'
      AND STR.CNTRY_CD_2_DGT_ISO = 'US'
      AND POSH2.GROSS_REV_LCL_AMT > 0
       AND ca.FSCL_YR_NUM IN (2018)
       AND ca.FSCL_QTR_IN_YR_NUM IN (2)
       AND STR.RGN_DESCR IN ('MID-AMERICA')

    GROUP BY
       STR.STORE_NUM
      ,ca.FSCL_YR_NUM
      ,POSH2.GUID_ID
    ) T3
  --JOINING LIST OF GUIDS WHO WERE ACTIVE, THEIR HOMESTORE, TOTAL TRANSACTIONS AND SPEND AT ALL STORES
  INNER JOIN (
    SELECT
       T1.GUID_ID
      ,T1.FSCL_YR_NUM
      ,SUM(CASE WHEN T1.RNK_HS = 1 AND T1.N_TRANS>=3 
         THEN T1.STORE_NUM 
         ELSE NULL 
       END) AS HOME_STORE
      ,SUM(CASE WHEN T1.RNK_HS = 1 AND T1.N_TRANS>=3 
         THEN T1.N_TRANS 
         ELSE NULL 
       END) AS HOME_STORE_VISITS
      ,SUM(CASE WHEN T1.RNK_HS = 1 AND T1.N_TRANS>=3 
         THEN T1.TOT_SPEND 
         ELSE NULL 
       END) AS HOME_STORE_SPEND
      ,SUM(T1.N_TRANS) AS ALL_STORES_VISITS
      ,SUM(T1.TOT_SPEND) AS ALL_STORES_SPEND
    FROM(
      --INNER QUERY - ALL GUIDS, STORES THEY VISITED, # TRANSACTIONS AT THOSE STORES AND TOTAL SPEND AT THOSE STORES
      SELECT
         POSH.GUID_ID
        ,STR.STORE_NUM
        ,ca.FSCL_YR_NUM
        ,COUNT(DISTINCT POSH.TRANS_ID) AS N_TRANS
        ,SUM(POSH.GROSS_REV_LCL_AMT) AS TOT_SPEND
        --this ranks each store that the guid has visited by the number of transactions and spend
        ,RANK() OVER(PARTITION BY POSH.GUID_ID, ca.FSCL_YR_NUM 
                  ORDER BY -COUNT(DISTINCT POSH.TRANS_ID), 
                           -SUM(POSH.GROSS_REV_LCL_AMT)
                  ) 
         AS RNK_HS
      FROM APPCA.F_POS_HDR POSH
      LEFT OUTER JOIN APPCA.D_STORE_VERS STR
        ON POSH.STORE_VERS_KEY = STR.STORE_VERS_KEY
      INNER JOIN APPCA.D_CAL ca
        ON POSH.BUS_DT = ca.CAL_DT
      WHERE STR.OWNR_TYPE_CD = 'CO'
        AND STR.CNTRY_CD_2_DGT_ISO = 'US'
        AND POSH.GROSS_REV_LCL_AMT > 0
       AND ca.FSCL_YR_NUM IN (2018)
       AND ca.FSCL_QTR_IN_YR_NUM IN (2)
       AND STR.RGN_DESCR IN ('MID-AMERICA')

      GROUP BY
         POSH.GUID_ID
        ,STR.STORE_NUM
        ,ca.FSCL_YR_NUM

    ) T1 --THIS IS THE LIST OF GUIDS AND THEIR HOMESTORE,SPEND ETC
    GROUP BY
       T1.GUID_ID
      ,T1.FSCL_YR_NUM

  ) T2 --THIS IS THE LIST OF ALL STORES AND THEIR CUSTOMERS
ON T2.GUID_ID = T3.GUID_ID
  AND T2.FSCL_YR_NUM = T3.FSCL_YR_NUM

WHERE T2.GUID_ID IS NOT NULL 
  AND T3.GUID_ID IS NOT NULL 
  AND T2.GUID_ID !='0' 
  AND T3.GUID_ID !='0' 

GROUP BY
T3.FSCL_YR_NUM


--411
/* quartlery comps */
/* Comp = (net discounted sales - net discounted sales LY ) / net discounted sales LY */
/* COSD/TSD = customer transactions / day count */

 SELECT ca.FSCL_YR_NUM
        , ca.FSCL_QTR_IN_YR_NUM
        , ROUND((SUM(f.NET_DISCOUNTED_SALES_AMT) - SUM(f.NET_DISCOUNTED_SALES_LY_AMT)) / SUM(f.NET_DISCOUNTED_SALES_LY_AMT),4) AS COMP
        , ROUND(SUM(f.CUST_TRANS_CNT) / SUM(f.ACTIVE_STORE_DAY_CNT),1) AS COSD

    FROM APPBUS.DFT_INTL_STORE_DAY_VW f      
        
        INNER JOIN APPDWH.ADT_STORE org
            ON f.STORE_NUMBER = org.STORE_NUM
            AND org.OWNR_TYPE_CD IN ('CO')
            AND org.STORE_DEVL_MKT_DESCR IN ('Mid-America')
        
        INNER JOIN APPDWH.ADT_CAL ca
            ON f.BUSINESS_DATE = ca.CAL_DT
            AND ca.FSCL_YR_NUM in (2018) 
            AND ca.FSCL_QTR_IN_YR_NUM = 2
            
        INNER JOIN APPBUS.AFT_STORE_COMP_PER_VW comp
            ON f.STORE_NUMBER = comp.STORE_NUMBER
            AND ca.FSCL_PER_BEG_DT = comp.FISCAL_PERIOD_BEGIN_DATE
            AND COMP_CODE = 'Y'
    
    GROUP BY ca.FSCL_YR_NUM
    , ca.FSCL_QTR_IN_YR_NUM
    










-- TOPLINE -- US CO STORES
--411
/* quartlery comps */
/* Comp = (net discounted sales - net discounted sales LY ) / net discounted sales LY */
/* COSD/TSD = customer transactions / day count */

 SELECT ca.FSCL_YR_NUM
        , ca.FSCL_QTR_IN_YR_NUM
        , ROUND((SUM(f.NET_DISCOUNTED_SALES_AMT) - SUM(f.NET_DISCOUNTED_SALES_LY_AMT)) / SUM(f.NET_DISCOUNTED_SALES_LY_AMT),4) AS COMP
        , ROUND(SUM(f.CUST_TRANS_CNT) / SUM(f.ACTIVE_STORE_DAY_CNT),1) AS COSD

    FROM APPBUS.DFT_INTL_STORE_DAY_VW f      
        
        INNER JOIN APPDWH.ADT_STORE org
            ON f.STORE_NUMBER = org.STORE_NUM
            AND org.OWNR_TYPE_CD IN ('CO') AND org.CNTRY_CD IN ('US')
        
        INNER JOIN APPDWH.ADT_CAL ca
            ON f.BUSINESS_DATE = ca.CAL_DT
            AND ca.FSCL_YR_NUM in (2018) 
            AND ca.FSCL_QTR_IN_YR_NUM = 2
            
        INNER JOIN APPBUS.AFT_STORE_COMP_PER_VW comp
            ON f.STORE_NUMBER = comp.STORE_NUMBER
            AND ca.FSCL_PER_BEG_DT = comp.FISCAL_PERIOD_BEGIN_DATE
            AND COMP_CODE = 'Y'
    
    GROUP BY ca.FSCL_YR_NUM
    , ca.FSCL_QTR_IN_YR_NUM

--TOPLINE CE SCORES -- us

WITH SQ AS
(SELECT
   c.FSCL_YR_NUM
  ,c.FSCL_QTR_IN_YR_NUM
  --,ce.STORE_NUM

  -- Compute top box scores for each question
  ,CASE WHEN COUNT(CASE WHEN ce.QSTN_ID = 'Q2_2' THEN ce.QSTN_ID END) = 0 THEN NULL
   ELSE TO_CHAR(SUM(CASE WHEN ce.RSPNS_ID = '7' AND ce.QSTN_ID = 'Q2_2' THEN 1 ELSE 0 END)
    / COUNT(CASE WHEN ce.QSTN_ID = 'Q2_2' THEN ce.QSTN_ID END),'0.0000') END
   AS CC
  ,CASE WHEN COUNT(CASE WHEN ce.QSTN_ID = 'Q2_1' THEN ce.QSTN_ID END) = 0 THEN NULL
   ELSE TO_CHAR(SUM(CASE WHEN ce.RSPNS_ID = '7' AND ce.QSTN_ID = 'Q2_1' THEN 1 ELSE 0 END)
    / COUNT(CASE WHEN ce.QSTN_ID = 'Q2_1' THEN ce.QSTN_ID END),'0.0000') END
   AS SPEED
  ,CASE WHEN COUNT(CASE WHEN ce.QSTN_ID = 'Q2_3' THEN ce.QSTN_ID END) = 0 THEN NULL
   ELSE TO_CHAR(SUM(CASE WHEN ce.RSPNS_ID = '7' AND ce.QSTN_ID = 'Q2_3' THEN 1 ELSE 0 END)
    / COUNT(CASE WHEN ce.QSTN_ID = 'Q2_3' THEN ce.QSTN_ID END),'0.0000') END
   AS ABVBEYND
  ,CASE WHEN COUNT(CASE WHEN ce.QSTN_ID = 'Q2_4' THEN ce.QSTN_ID END) = 0 THEN NULL
   ELSE TO_CHAR(SUM(CASE WHEN ce.RSPNS_ID = '7' AND ce.QSTN_ID = 'Q2_4' THEN 1 ELSE 0 END)
    / COUNT(CASE WHEN ce.QSTN_ID = 'Q2_4' THEN ce.QSTN_ID END),'0.0000') END
   AS ACCURACY
  ,CASE WHEN COUNT(CASE WHEN ce.QSTN_ID = 'Q2_5' THEN ce.QSTN_ID END) = 0 THEN NULL
   ELSE TO_CHAR(SUM(CASE WHEN ce.RSPNS_ID = '7' AND ce.QSTN_ID = 'Q2_5' THEN 1 ELSE 0 END)
    / COUNT(CASE WHEN ce.QSTN_ID = 'Q2_5' THEN ce.QSTN_ID END),'0.0000') END
   AS BEVTASTE
  ,CASE WHEN COUNT(CASE WHEN ce.QSTN_ID = 'Q2_6' THEN ce.QSTN_ID END) = 0 THEN NULL
   ELSE TO_CHAR(SUM(CASE WHEN ce.RSPNS_ID = '7' AND ce.QSTN_ID = 'Q2_6' THEN 1 ELSE 0 END)
    / COUNT(CASE WHEN ce.QSTN_ID = 'Q2_6' THEN ce.QSTN_ID END),'0.0000') END
   AS FOODTASTE
  ,CASE WHEN COUNT(CASE WHEN ce.QSTN_ID = 'Q2_7' THEN ce.QSTN_ID END) = 0 THEN NULL
   ELSE TO_CHAR(SUM(CASE WHEN ce.RSPNS_ID = '7' AND ce.QSTN_ID = 'Q2_7' THEN 1 ELSE 0 END)
    / COUNT(CASE WHEN ce.QSTN_ID = 'Q2_7' THEN ce.QSTN_ID END),'0.0000') END
   AS CLEAN

FROM APPDWH.AFT_CV_SRVY_RSPNS ce

  INNER JOIN APPDWH.ADT_CAL c
    ON TRUNC(ce.TRANS_DTM) = c.CAL_DT
      AND c.FSCL_YR_NUM IN (2017,2018)
      AND c.FSCL_QTR_IN_YR_NUM IN (2)
      
  INNER JOIN APPDWH.ADT_STORE org
      ON ce.STORE_NUM = org.STORE_NUM
         AND org.OWNR_TYPE_CD IN ('CO')
         AND org.CNTRY_CD IN ('US')

WHERE ce.RSPNS_ID <> '9'  -- rspns_id = 9 for unanswered questions

GROUP BY
   c.FSCL_YR_NUM
  --,ce.STORE_NUM
  ,c.FSCL_QTR_IN_YR_NUM
  ), SQ2 AS(
SELECT     
    SQ.FSCL_QTR_IN_YR_NUM
    ,SQ.FSCL_YR_NUM
    --,SQ.STORE_NUM
    ,SQ.CC
    ,SQ.SPEED
    ,SQ.ABVBEYND
    ,SQ.ACCURACY
    ,SQ.BEVTASTE
    ,SQ.FOODTASTE   
    ,SQ.CLEAN
    ,ROUND((AVG(SQ.SPEED)+AVG(SQ.ABVBEYND)+AVG(SQ.ACCURACY)+AVG(SQ.BEVTASTE)+AVG(SQ.FOODTASTE)+AVG(SQ.CLEAN))/6,4) AS STOREOPS
FROM SQ
GROUP BY
    SQ.FSCL_YR_NUM
    ,SQ.FSCL_QTR_IN_YR_NUM
    ,SQ.CC
    ,SQ.SPEED
    ,SQ.ABVBEYND
    ,SQ.ACCURACY
    ,SQ.BEVTASTE
    ,SQ.FOODTASTE   
    ,SQ.CLEAN
    --,SQ.STORE_NUM
Order BY
    --SQ.STORE_NUM
    SQ.FSCL_YR_NUM DESC), SQ3 AS(
SELECT
    SQ2.FSCL_YR_NUM
    --,SQ2.STORE_NUM
    ,SQ2.FSCL_QTR_IN_YR_NUM
    ,SQ2.CC
    ,SQ2.CC - lag(SQ2.CC) over(order by SQ2.FSCL_YR_NUM) AS CC_YOY
    ,SQ2.STOREOPS
    ,SQ2.STOREOPS - lag(SQ2.STOREOPS) over(order by SQ2.FSCL_YR_NUM) AS STOREOPS_YOY
    ,SQ2.SPEED
    ,SQ2.SPEED - lag(SQ2.SPEED) over(order by SQ2.FSCL_YR_NUM)  AS SPEED_YOY
    ,SQ2.ABVBEYND
    ,SQ2.ABVBEYND - lag(SQ2.ABVBEYND) over(order by SQ2.FSCL_YR_NUM)  AS ABVBEYND_YOY
    ,SQ2.ACCURACY
    ,SQ2.ACCURACY - lag(SQ2.ACCURACY) over(order by SQ2.FSCL_YR_NUM)  AS ACCURACY_YOY
    ,SQ2.BEVTASTE
    ,SQ2.BEVTASTE - lag(SQ2.BEVTASTE) over(order by SQ2.FSCL_YR_NUM)  AS BEVTASTE_YOY
    ,SQ2.FOODTASTE
    ,SQ2.FOODTASTE - lag(SQ2.FOODTASTE) over(order by SQ2.FSCL_YR_NUM)  AS FOODTASTE_YOY
    ,SQ2.CLEAN
    ,SQ2.CLEAN - lag(SQ2.CLEAN) over(order by SQ2.FSCL_YR_NUM)  AS CLEAN_YOY

FROM SQ2
GROUP BY 
    SQ2.FSCL_YR_NUM
    --,SQ2.STORE_NUM
    ,SQ2.FSCL_QTR_IN_YR_NUM
    ,SQ2.CC
    ,SQ2.STOREOPS
    ,SQ2.SPEED
    ,SQ2.ABVBEYND
    ,SQ2.ACCURACY
    ,SQ2.BEVTASTE
    ,SQ2.FOODTASTE   
    ,SQ2.CLEAN   
    
ORDER BY
    --SQ2.STORE_NUM
    SQ2.FSCL_YR_NUM DESC)
SELECT
    --SQ3.STORE_NUM
    SQ3.FSCL_YR_NUM
    ,SQ3.CC
    ,SQ3.CC_YOY
    ,SQ3.STOREOPS
    ,SQ3.STOREOPS_YOY
    ,SQ3.SPEED    
    ,SQ3.SPEED_YOY
    ,SQ3.ABVBEYND
    ,SQ3.ABVBEYND_YOY
    ,SQ3.ACCURACY
    ,SQ3.ACCURACY_YOY
    ,SQ3.BEVTASTE
    ,SQ3.BEVTASTE_YOY
    ,SQ3.FOODTASTE   
    ,SQ3.FOODTASTE_YOY  
    ,SQ3.CLEAN 
    ,SQ3.CLEAN_YOY 
FROM SQ3
    WHERE SQ3.FSCL_YR_NUM = 2018
    
    
    
--PEAK CE SCORES

WITH SQ AS
(SELECT
   c.FSCL_YR_NUM
  ,c.FSCL_QTR_IN_YR_NUM
  --,ce.STORE_NUM

  -- Compute top box scores for each question
  ,CASE WHEN COUNT(CASE WHEN ce.QSTN_ID = 'Q2_2' THEN ce.QSTN_ID END) = 0 THEN NULL
   ELSE TO_CHAR(SUM(CASE WHEN ce.RSPNS_ID = '7' AND ce.QSTN_ID = 'Q2_2' THEN 1 ELSE 0 END)
    / COUNT(CASE WHEN ce.QSTN_ID = 'Q2_2' THEN ce.QSTN_ID END),'0.0000') END
   AS PEAKCC
  ,CASE WHEN COUNT(CASE WHEN ce.QSTN_ID = 'Q2_1' THEN ce.QSTN_ID END) = 0 THEN NULL
   ELSE TO_CHAR(SUM(CASE WHEN ce.RSPNS_ID = '7' AND ce.QSTN_ID = 'Q2_1' THEN 1 ELSE 0 END)
    / COUNT(CASE WHEN ce.QSTN_ID = 'Q2_1' THEN ce.QSTN_ID END),'0.0000') END
   AS PEAKSPEED
  ,CASE WHEN COUNT(CASE WHEN ce.QSTN_ID = 'Q2_3' THEN ce.QSTN_ID END) = 0 THEN NULL
   ELSE TO_CHAR(SUM(CASE WHEN ce.RSPNS_ID = '7' AND ce.QSTN_ID = 'Q2_3' THEN 1 ELSE 0 END)
    / COUNT(CASE WHEN ce.QSTN_ID = 'Q2_3' THEN ce.QSTN_ID END),'0.0000') END
   AS PEAKABVBEYND
  ,CASE WHEN COUNT(CASE WHEN ce.QSTN_ID = 'Q2_4' THEN ce.QSTN_ID END) = 0 THEN NULL
   ELSE TO_CHAR(SUM(CASE WHEN ce.RSPNS_ID = '7' AND ce.QSTN_ID = 'Q2_4' THEN 1 ELSE 0 END)
    / COUNT(CASE WHEN ce.QSTN_ID = 'Q2_4' THEN ce.QSTN_ID END),'0.0000') END
   AS PEAKACCURACY
  ,CASE WHEN COUNT(CASE WHEN ce.QSTN_ID = 'Q2_5' THEN ce.QSTN_ID END) = 0 THEN NULL
   ELSE TO_CHAR(SUM(CASE WHEN ce.RSPNS_ID = '7' AND ce.QSTN_ID = 'Q2_5' THEN 1 ELSE 0 END)
    / COUNT(CASE WHEN ce.QSTN_ID = 'Q2_5' THEN ce.QSTN_ID END),'0.0000') END
   AS PEAKBEVTASTE
  ,CASE WHEN COUNT(CASE WHEN ce.QSTN_ID = 'Q2_6' THEN ce.QSTN_ID END) = 0 THEN NULL
   ELSE TO_CHAR(SUM(CASE WHEN ce.RSPNS_ID = '7' AND ce.QSTN_ID = 'Q2_6' THEN 1 ELSE 0 END)
    / COUNT(CASE WHEN ce.QSTN_ID = 'Q2_6' THEN ce.QSTN_ID END),'0.0000') END
   AS PEAKFOODTASTE
  ,CASE WHEN COUNT(CASE WHEN ce.QSTN_ID = 'Q2_7' THEN ce.QSTN_ID END) = 0 THEN NULL
   ELSE TO_CHAR(SUM(CASE WHEN ce.RSPNS_ID = '7' AND ce.QSTN_ID = 'Q2_7' THEN 1 ELSE 0 END)
    / COUNT(CASE WHEN ce.QSTN_ID = 'Q2_7' THEN ce.QSTN_ID END),'0.0000') END
   AS PEAKCLEAN

FROM APPDWH.AFT_CV_SRVY_RSPNS ce

  INNER JOIN APPDWH.ADT_CAL c
    ON TRUNC(ce.TRANS_DTM) = c.CAL_DT
      AND c.FSCL_YR_NUM IN (2017,2018)
      AND c.FSCL_QTR_IN_YR_NUM IN (2)
      
  INNER JOIN APPDWH.ADT_STORE org
      ON ce.STORE_NUM = org.STORE_NUM
         AND org.OWNR_TYPE_CD IN ('CO')
         AND org.CNTRY_CD IN ('US')

WHERE ce.RSPNS_ID <> '9'  -- rspns_id = 9 for unanswered questions
  AND (TO_CHAR(ce.TRANS_DTM, 'HH24') >=7 AND TO_CHAR(ce.TRANS_DTM, 'HH24') < 11)

GROUP BY
   c.FSCL_YR_NUM
  ,c.FSCL_QTR_IN_YR_NUM
  --,ce.STORE_NUM
  ), SQ2 AS(
SELECT     
    SQ.FSCL_QTR_IN_YR_NUM
    ,SQ.FSCL_YR_NUM
    --,SQ.STORE_NUM
    ,SQ.PEAKCC
    ,SQ.PEAKSPEED
    ,SQ.PEAKABVBEYND
    ,SQ.PEAKACCURACY
    ,SQ.PEAKBEVTASTE
    ,SQ.PEAKFOODTASTE   
    ,SQ.PEAKCLEAN
    ,ROUND((AVG(SQ.PEAKSPEED)+AVG(SQ.PEAKABVBEYND)+AVG(SQ.PEAKACCURACY)+AVG(SQ.PEAKBEVTASTE)+AVG(SQ.PEAKFOODTASTE)+AVG(SQ.PEAKCLEAN))/6,4) AS PEAKSTOREOPS
FROM SQ
GROUP BY
    SQ.FSCL_YR_NUM
    ,SQ.FSCL_QTR_IN_YR_NUM
    ,SQ.PEAKCC
    ,SQ.PEAKSPEED
    ,SQ.PEAKABVBEYND
    ,SQ.PEAKACCURACY
    ,SQ.PEAKBEVTASTE
    ,SQ.PEAKFOODTASTE   
    ,SQ.PEAKCLEAN
    --,SQ.STORE_NUM
Order BY
    --SQ.STORE_NUM
    SQ.FSCL_YR_NUM DESC), SQ3 AS(
SELECT
    SQ2.FSCL_YR_NUM
    --,SQ2.STORE_NUM
    ,SQ2.FSCL_QTR_IN_YR_NUM
    ,SQ2.PEAKCC
    ,SQ2.PEAKCC - lag(SQ2.PEAKCC) over(order by SQ2.FSCL_YR_NUM)  AS PEAKCC_YOY
    ,SQ2.PEAKSTOREOPS
    ,SQ2.PEAKSTOREOPS - lag(SQ2.PEAKSTOREOPS) over(order by SQ2.FSCL_YR_NUM)  AS PEAKSTOREOPS_YOY
    ,SQ2.PEAKSPEED
    ,SQ2.PEAKSPEED - lag(SQ2.PEAKSPEED) over(order by SQ2.FSCL_YR_NUM)  AS PEAKSPEED_YOY
    ,SQ2.PEAKABVBEYND
    ,SQ2.PEAKABVBEYND - lag(SQ2.PEAKABVBEYND) over(order by SQ2.FSCL_YR_NUM)  AS PEAKABVBEYND_YOY
    ,SQ2.PEAKACCURACY
    ,SQ2.PEAKACCURACY - lag(SQ2.PEAKACCURACY) over(order by SQ2.FSCL_YR_NUM)  AS PEAKACCURACY_YOY
    ,SQ2.PEAKBEVTASTE
    ,SQ2.PEAKBEVTASTE - lag(SQ2.PEAKBEVTASTE)over(order by SQ2.FSCL_YR_NUM)  AS PEAKBEVTASTE_YOY
    ,SQ2.PEAKFOODTASTE
    ,SQ2.PEAKFOODTASTE - lag(SQ2.PEAKFOODTASTE) over(order by SQ2.FSCL_YR_NUM)  AS PEAKFOODTASTE_YOY
    ,SQ2.PEAKCLEAN
    ,SQ2.PEAKCLEAN - lag(SQ2.PEAKCLEAN) over(order by SQ2.FSCL_YR_NUM)  AS PEAKCLEAN_YOY

FROM SQ2
GROUP BY 
    SQ2.FSCL_YR_NUM
    --,SQ2.STORE_NUM
    ,SQ2.FSCL_QTR_IN_YR_NUM
    ,SQ2.PEAKCC
    ,SQ2.PEAKSTOREOPS
    ,SQ2.PEAKSPEED
    ,SQ2.PEAKABVBEYND
    ,SQ2.PEAKACCURACY
    ,SQ2.PEAKBEVTASTE
    ,SQ2.PEAKFOODTASTE   
    ,SQ2.PEAKCLEAN   
    
ORDER BY
    --SQ2.STORE_NUM
    SQ2.FSCL_YR_NUM DESC)
SELECT
    --SQ3.STORE_NUM
    SQ3.PEAKCC
    ,SQ3.PEAKCC_YOY
    ,SQ3.PEAKSTOREOPS
    ,SQ3.PEAKSTOREOPS_YOY
    ,SQ3.PEAKSPEED    
    ,SQ3.PEAKSPEED_YOY
    ,SQ3.PEAKABVBEYND
    ,SQ3.PEAKABVBEYND_YOY
    ,SQ3.PEAKACCURACY
    ,SQ3.PEAKACCURACY_YOY
    ,SQ3.PEAKBEVTASTE
    ,SQ3.PEAKBEVTASTE_YOY
    ,SQ3.PEAKFOODTASTE   
    ,SQ3.PEAKFOODTASTE_YOY  
    ,SQ3.PEAKCLEAN 
    ,SQ3.PEAKCLEAN_YOY 
FROM SQ3
    WHERE SQ3.FSCL_YR_NUM = 2018
    
  
--Channel mix by store
--416

SELECT
  ROUND(COUNT(CASE WHEN ss.DRIVE_THRU_IND = 1 THEN ss.DRIVE_THRU_IND END) / COUNT(CASE WHEN ss.DRIVE_THRU_IND BETWEEN 0 AND 1 THEN ss.DRIVE_THRU_IND END),3) AS DT_PCT
  ,ca.FSCL_YR_NUM
  ,ca.FSCL_QTR_IN_YR_NUM
  ,COUNT(DISTINCT tr.TRANS_ID) AS TTL_TRANS_CNT
  ,ROUND(COUNT(DISTINCT CASE WHEN tr.TRANS_END_TM_KEY BETWEEN 70000 AND 95959 AND ty.ORD_MTHD_CD = 'MOP' THEN tr.TRANS_ID END) / COUNT(DISTINCT tr.TRANS_ID),4) AS MOP_PCT
  ,ROUND(COUNT(DISTINCT CASE WHEN tr.TRANS_END_TM_KEY BETWEEN 70000 AND 95959 AND ty.ORD_MTHD_CD = 'MOP' THEN tr.TRANS_ID END) / COUNT(DISTINCT CASE WHEN tr.TRANS_END_TM_KEY BETWEEN 70000 AND 95959 THEN tr.TRANS_ID END),4) AS PEAK_MOP_PCT
  ,ROUND(COUNT(DISTINCT CASE WHEN tr.TRANS_END_TM_KEY BETWEEN 70000 AND 95959 AND ty.ORD_MTHD_CD = 'OTW' THEN tr.TRANS_ID END) / COUNT(DISTINCT tr.TRANS_ID),4) AS OTW_PCT
  ,ROUND(COUNT(DISTINCT CASE WHEN tr.TRANS_END_TM_KEY BETWEEN 70000 AND 95959 AND ty.ORD_MTHD_CD = 'OTW' THEN tr.TRANS_ID END) / COUNT(DISTINCT CASE WHEN tr.TRANS_END_TM_KEY BETWEEN 70000 AND 95959 THEN tr.TRANS_ID END),4) AS PEAK_OTW_PCT

FROM APPCA.F_POS_HDR tr

INNER JOIN D_POS_HDR_TRANS_TYPE ty
  ON tr.POS_HDR_TRANS_TYPE_KEY = ty.POS_HDR_TRANS_TYPE_KEY
  
INNER JOIN APPCA.D_STORE_VERS ss
  ON ss.STORE_VERS_KEY = tr.STORE_VERS_KEY
  
INNER JOIN APPCA.D_CAL ca
  ON tr.BUS_DT = ca.CAL_DT

WHERE tr.CNTRY_CD = 'US'
  AND ss.OWNR_TYPE_CD = 'CO'
  AND ca.FSCL_YR_NUM = 2018 AND ca.FSCL_QTR_IN_YR_NUM = 2

GROUP BY
  --ss.STORE_NUM
  ca.FSCL_YR_NUM
  ,ca.FSCL_QTR_IN_YR_NUM
  
  
--/* CAW */
--/* % home store customers */
SELECT
  T3.FSCL_YR_NUM
  ,ROUND(SUM(CASE WHEN T2.HOME_STORE = T3.STORE_NUM THEN 1 ELSE NULL END) / COUNT(DISTINCT T2.GUID_ID),4) AS HS_CUST_PCT
FROM(
    --LIST OF ALL ACTIVE STORES AND GUIDS WHO VISITED THOSE STORES DURING THE GIVEN TIME PERIOD
    SELECT
       STR.STORE_NUM
      ,ca.FSCL_YR_NUM
      ,POSH2.GUID_ID
    FROM APPCA.F_POS_HDR POSH2
    LEFT OUTER JOIN APPCA.D_STORE_VERS STR
      ON POSH2.STORE_VERS_KEY = STR.STORE_VERS_KEY
    INNER JOIN APPCA.D_CAL ca
      ON POSH2.BUS_DT = ca.CAL_DT
    WHERE STR.OWNR_TYPE_CD = 'CO'
      AND STR.CNTRY_CD_2_DGT_ISO = 'US'
      AND POSH2.GROSS_REV_LCL_AMT > 0
       AND ca.FSCL_YR_NUM IN (2018)
       AND ca.FSCL_QTR_IN_YR_NUM IN (2)

    GROUP BY
       STR.STORE_NUM
      ,ca.FSCL_YR_NUM
      ,POSH2.GUID_ID
    ) T3
  --JOINING LIST OF GUIDS WHO WERE ACTIVE, THEIR HOMESTORE, TOTAL TRANSACTIONS AND SPEND AT ALL STORES
  INNER JOIN (
    SELECT
       T1.GUID_ID
      ,T1.FSCL_YR_NUM
      ,SUM(CASE WHEN T1.RNK_HS = 1 AND T1.N_TRANS>=3 
         THEN T1.STORE_NUM 
         ELSE NULL 
       END) AS HOME_STORE
      ,SUM(CASE WHEN T1.RNK_HS = 1 AND T1.N_TRANS>=3 
         THEN T1.N_TRANS 
         ELSE NULL 
       END) AS HOME_STORE_VISITS
      ,SUM(CASE WHEN T1.RNK_HS = 1 AND T1.N_TRANS>=3 
         THEN T1.TOT_SPEND 
         ELSE NULL 
       END) AS HOME_STORE_SPEND
      ,SUM(T1.N_TRANS) AS ALL_STORES_VISITS
      ,SUM(T1.TOT_SPEND) AS ALL_STORES_SPEND
    FROM(
      --INNER QUERY - ALL GUIDS, STORES THEY VISITED, # TRANSACTIONS AT THOSE STORES AND TOTAL SPEND AT THOSE STORES
      SELECT
         POSH.GUID_ID
        ,STR.STORE_NUM
        ,ca.FSCL_YR_NUM
        ,COUNT(DISTINCT POSH.TRANS_ID) AS N_TRANS
        ,SUM(POSH.GROSS_REV_LCL_AMT) AS TOT_SPEND
        --this ranks each store that the guid has visited by the number of transactions and spend
        ,RANK() OVER(PARTITION BY POSH.GUID_ID, ca.FSCL_YR_NUM 
                  ORDER BY -COUNT(DISTINCT POSH.TRANS_ID), 
                           -SUM(POSH.GROSS_REV_LCL_AMT)
                  ) 
         AS RNK_HS
      FROM APPCA.F_POS_HDR POSH
      LEFT OUTER JOIN APPCA.D_STORE_VERS STR
        ON POSH.STORE_VERS_KEY = STR.STORE_VERS_KEY
      INNER JOIN APPCA.D_CAL ca
        ON POSH.BUS_DT = ca.CAL_DT
      WHERE STR.OWNR_TYPE_CD = 'CO'
        AND STR.CNTRY_CD_2_DGT_ISO = 'US'
        AND POSH.GROSS_REV_LCL_AMT > 0
       AND ca.FSCL_YR_NUM IN (2018)
       AND ca.FSCL_QTR_IN_YR_NUM IN (2)

      GROUP BY
         POSH.GUID_ID
        ,STR.STORE_NUM
        ,ca.FSCL_YR_NUM

    ) T1 --THIS IS THE LIST OF GUIDS AND THEIR HOMESTORE,SPEND ETC
    GROUP BY
       T1.GUID_ID
      ,T1.FSCL_YR_NUM

  ) T2 --THIS IS THE LIST OF ALL STORES AND THEIR CUSTOMERS
ON T2.GUID_ID = T3.GUID_ID
  AND T2.FSCL_YR_NUM = T3.FSCL_YR_NUM

WHERE T2.GUID_ID IS NOT NULL 
  AND T3.GUID_ID IS NOT NULL 
  AND T2.GUID_ID !='0' 
  AND T3.GUID_ID !='0' 

GROUP BY
T3.FSCL_YR_NUM

  
  
--PARTNER TENURE AND STORE

WITH prtnr AS 
(SELECT DISTINCT
      SAP_PRTNR_ID
      ,ORIG_HIRE_DT
      ,MOST_RECENT_HIRE_DT
      FROM D_PRTNR_VERS
      WHERE EMP_STAT_CD = 'Active'
 ) SELECT 
      prtnr.SAP_PRTNR_ID AS PRTNR_NUM
      ,prtnr.ORIG_HIRE_DT
      ,prtnr.MOST_RECENT_HIRE_DT
      ,gls.STORE_NUM
      ,gls.JOB_ID

FROM prtnr

INNER JOIN (
  SELECT * FROM (
    SELECT gls1.PRTNR_NUM, gls1.STORE_NUM, gls1.JOB_ID,
    ROW_NUMBER() OVER (PARTITION BY gls1.PRTNR_NUM ORDER BY gls1.END_DTM DESC) AS mostrec
    FROM APPDWH.AFT_GLS_PRTNR_TMCARD@SBP411 gls1
      JOIN ADV_STORE str
        on gls1.STORE_NUM = str.STORE_NUM
        AND str.OWNR_TYPE_CD IN ('CO') AND str.CNTRY_CD IN ('US')
    WHERE gls1.CNTRY_CD = 'US'
      AND gls1.BUS_DT BETWEEN '01-JAN-18' AND '01-APR-18'
      AND gls1.JOB_ID IN (50000362,50000358,50000117)
    ) WHERE mostrec = 1
  ) gls 
  
ON prtnr.SAP_PRTNR_ID = gls.PRTNR_NUM

--PULSE    
--SBP415 (PDW)

SELECT 
ROUND(AVG(CASE WHEN sr.QUESTION_ID = 'Q1' THEN sr.RESP_ID END),2) AS Q1_AVG
, p.JOB_ROLE

FROM APPSTG.SRV_RESPONSES_STG sr
  
LEFT JOIN (
   SELECT * FROM (
    SELECT gls1.PRTNR_ID, gls1.STORE_NUM, gls1.JOB_ABBREV_NM,
    ROW_NUMBER() OVER (PARTITION BY gls1.PRTNR_ID ORDER BY gls1.ETL_INSERT_DTM DESC) AS mostrec,
    CASE WHEN gls1.JOB_ABBREV_NM IN ('barista','shift supv','attendant') THEN 'HOURLY' 
         WHEN gls1.JOB_ABBREV_NM IN ('st manager') THEN 'SM' END AS JOB_ROLE
    FROM APPSTG.SRV_ACTIVE_PARTNERS_STG gls1
    JOIN ADV_STORE str
        on str.STORE_NUM = gls1.STORE_NUM
        AND str.OWNR_TYPE_CD IN ('CO') AND str.CNTRY_CD IN ('US')
    WHERE gls1.JOB_ABBREV_NM IN ('barista','shift supv','attendant','st manager')
    ) WHERE mostrec = 1
  ) p
ON sr.PRTNR_ID = p.PRTNR_ID

WHERE sr.QUESTION_ID = 'Q1'
GROUP BY p.JOB_ROLE

--415
--SM Stability

SELECT
s.FSCL_PER_BEG_DT
,ROUND(COUNT(CASE WHEN s.SM1YRSTABLE = 1 THEN s.SM1YRSTABLE END) / COUNT(CASE WHEN s.SM1YRSTABLE BETWEEN 0 AND 1 THEN s.SM1YRSTABLE END),3) AS SM1YRSTABLE_PCT
,ROUND(COUNT(CASE WHEN s.SM2YRSTABLE = 1 THEN s.SM2YRSTABLE END) / COUNT(CASE WHEN s.SM2YRSTABLE BETWEEN 0 AND 1 THEN s.SM2YRSTABLE END),3) AS SM2YRSTABLE_PCT

FROM LRIVERS.STOREMANAGERSTABILITY s

LEFT JOIN ADV_STORE str
    on s.STORE_NUM = str.STORE_NUM
    AND str.OWNR_TYPE_CD IN ('CO') AND str.CNTRY_CD IN ('US')

WHERE s.FSCL_PER_BEG_DT = (select max(FSCL_PER_BEG_DT) from LRIVERS.STOREMANAGERSTABILITY)

GROUP BY
s.FSCL_PER_BEG_DT


