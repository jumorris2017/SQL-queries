/* Same customer pre- and post- survey behavior */
/* Pulls pre- and post- period spend and number of visits */

    WITH SR AS (
          SELECT S1.GUID_USER_ID,
          --FIRST SURVEY
          S1.CASE_ID AS CASE_ID_1,
          TRUNC(S1.TRANS_DTM) AS TRANS_DTM_1,
          TO_CHAR(S1.TRANS_DTM, 'YYYYMMDD') || TRIM(TO_CHAR(S1.STORE_NUM, '000000'))|| ltrim(TO_CHAR(S1.RGSTR_NUM, '00')) || TRIM(to_char(S1.TRANS_ID)) AS TRANS_ID_1,
          AVG(CASE WHEN S1.QSTN_ID='Q2_8' THEN S1.RSPNS_ID END) AS WORTH_1,
          AVG(CASE WHEN S1.QSTN_ID='Q2_2' THEN S1.RSPNS_ID END) AS CC_1,
          AVG(CASE WHEN S1.QSTN_ID='Q2_1' THEN S1.RSPNS_ID END) AS SPEED_1,
          AVG(CASE WHEN S1.QSTN_ID='Q2_4' THEN S1.RSPNS_ID END) AS ACCR_1,
          AVG(CASE WHEN S1.QSTN_ID='Q2_5' THEN S1.RSPNS_ID END) AS BEV_1,
          AVG(CASE WHEN S1.QSTN_ID='Q2_6' THEN S1.RSPNS_ID END) AS FOOD_1,
          AVG(CASE WHEN S1.QSTN_ID='Q2_7' THEN S1.RSPNS_ID END) AS CLEAN_1,
          AVG(CASE WHEN S1.QSTN_ID='Q2_3' THEN S1.RSPNS_ID END) AS ABVBYD_1,
          AVG(CASE WHEN S1.QSTN_ID='Q1' THEN S1.RSPNS_ID END) AS RETURN_1,
          AVG(CASE WHEN S1.QSTN_ID='Q2_8' THEN S1.RSPNS_ID END) AS N_ROWS_WORTH_1,
          --SECOND SURVEY
          S2.CASE_ID AS CASE_ID_2,
          TRUNC(S2.TRANS_DTM) AS TRANS_DTM_2,
          TO_CHAR(S2.TRANS_DTM, 'YYYYMMDD') || TRIM(TO_CHAR(S2.STORE_NUM, '000000'))|| ltrim(TO_CHAR(S2.RGSTR_NUM, '00')) || TRIM(to_char(S2.TRANS_ID)) AS TRANS_ID_2,
          AVG(CASE WHEN S2.QSTN_ID='Q2_8' THEN S2.RSPNS_ID END) AS WORTH_2,
          AVG(CASE WHEN S2.QSTN_ID='Q2_2' THEN S2.RSPNS_ID END) AS CC_2,
          AVG(CASE WHEN S2.QSTN_ID='Q2_1' THEN S2.RSPNS_ID END) AS SPEED_2,
          AVG(CASE WHEN S2.QSTN_ID='Q2_4' THEN S2.RSPNS_ID END) AS ACCR_2,
          AVG(CASE WHEN S2.QSTN_ID='Q2_5' THEN S2.RSPNS_ID END) AS BEV_2,
          AVG(CASE WHEN S2.QSTN_ID='Q2_6' THEN S2.RSPNS_ID END) AS FOOD_2,
          AVG(CASE WHEN S2.QSTN_ID='Q2_7' THEN S2.RSPNS_ID END) AS CLEAN_2,
          AVG(CASE WHEN S2.QSTN_ID='Q2_3' THEN S2.RSPNS_ID END) AS ABVBYD_2,
          AVG(CASE WHEN S2.QSTN_ID='Q1'   THEN S2.RSPNS_ID END) AS RETURN_2,
          AVG(CASE WHEN S2.QSTN_ID='Q2_8' THEN S2.RSPNS_ID END) AS N_ROWS_WORTH_2
          FROM APPOTHER.AFT_CV_SRVY_RSPNS S1
          INNER JOIN APPOTHER.AFT_CV_SRVY_RSPNS S2
          ON S1.GUID_USER_ID = S2.GUID_USER_ID
          --AND TRUNC(S1.TRANS_DTM)-TRUNC(S2.TRANS_DTM) <60 --JM UPDATE: This is backward
          --AND TRUNC(S1.TRANS_DTM)-TRUNC(S2.TRANS_DTM) >0 --JM UPDATE: This is backward
          AND TRUNC(S2.TRANS_DTM)-TRUNC(S1.TRANS_DTM) <60
          AND TRUNC(S2.TRANS_DTM)-TRUNC(S1.TRANS_DTM) >0
          --AND S1.GUID_USER_ID = '4CC6549F-047A-41BF-984D-2CFD8C40C330'
          --AND S1.CASE_ID = '02201504240950280001544808'
          INNER JOIN APPOTHER.D_STORE_VERS v1
          ON S1.STORE_NUM = v1.STORE_NUM 
            AND v1.CURRENT_FLG = 'Y' 
            AND v1.OWNR_TYPE_CD = 'CO' 
          INNER JOIN APPOTHER.D_STORE_VERS v2 
          ON S2.STORE_NUM = v2.STORE_NUM
            AND v2.CURRENT_FLG = 'Y' 
            AND v2.OWNR_TYPE_CD = 'CO' 
          WHERE S1.TRANS_DTM >='01-AUG-2017'
          AND S2.TRANS_DTM >='01-AUG-2017'
          GROUP BY S1.GUID_USER_ID,
          --FIRST SURVEY
          S1.CASE_ID,
          TRUNC(S1.TRANS_DTM),
          TO_CHAR(S1.TRANS_DTM, 'YYYYMMDD') || TRIM(TO_CHAR(S1.STORE_NUM, '000000'))|| ltrim(TO_CHAR(S1.RGSTR_NUM, '00')) || TRIM(to_char(S1.TRANS_ID)),
          --SECOND SURVEY
          S2.CASE_ID,
          TRUNC(S2.TRANS_DTM),
          TO_CHAR(S2.TRANS_DTM, 'YYYYMMDD') || TRIM(TO_CHAR(S2.STORE_NUM, '000000'))|| ltrim(TO_CHAR(S2.RGSTR_NUM, '00')) || TRIM(to_char(S2.TRANS_ID))
    ),
SR2 AS (
    SELECT SR.GUID_USER_ID,
      SR.CASE_ID_1,
      SR.TRANS_DTM_1,
      SR.TRANS_ID_1,
      SR.WORTH_1,
      SR.CC_1,
      SR.SPEED_1,
      SR.ACCR_1,
      SR.BEV_1,
      SR.FOOD_1,
      SR.CLEAN_1,
      SR.ABVBYD_1,
      SR.RETURN_1,
      SUM(CASE WHEN POS1.BUS_DT < TRUNC(SR.TRANS_DTM_1) THEN POS1.GROSS_REV_LCL_AMT ELSE NULL END) AS SPEND_PRE_15D_1,
      SUM(CASE WHEN POS1.BUS_DT > TRUNC(SR.TRANS_DTM_1) THEN POS1.GROSS_REV_LCL_AMT ELSE NULL END) AS SPEND_POST_15D_1,
      COUNT(CASE WHEN POS1.BUS_DT > TRUNC(SR.TRANS_DTM_1) THEN POS1.GROSS_REV_LCL_AMT ELSE NULL END) AS ROWS_SPEND_POST_15D_1,
      COUNT(DISTINCT CASE WHEN POS1.BUS_DT < TRUNC(SR.TRANS_DTM_1) THEN POS1.TRANS_ID ELSE NULL END) AS VISITS_PRE_15D_1,
      COUNT(DISTINCT CASE WHEN POS1.BUS_DT > TRUNC(SR.TRANS_DTM_1) THEN POS1.TRANS_ID ELSE NULL END) AS VISITS_POST_15D_1,
      SR.CASE_ID_2,
      SR.TRANS_DTM_2,
      SR.TRANS_ID_2,
      SR.WORTH_2,
      SR.CC_2,
      SR.SPEED_2,
      SR.ACCR_2,
      SR.BEV_2,
      SR.FOOD_2,
      SR.CLEAN_2,
      SR.ABVBYD_2,
      SR.RETURN_2
    FROM SR
      LEFT OUTER JOIN APPCA.F_POS_HDR POS1
      ON SR.GUID_USER_ID = POS1.GUID_ID
      AND POS1.BUS_DT >= TRUNC(SR.TRANS_DTM_1)- INTERVAL'15'DAY 
      AND POS1.BUS_DT <= TRUNC(SR.TRANS_DTM_1)+ INTERVAL'15'DAY 
      GROUP BY SR.GUID_USER_ID,
      SR.CASE_ID_1,
      SR.TRANS_DTM_1,
      SR.TRANS_ID_1,
      SR.WORTH_1,
      SR.CC_1,
      SR.SPEED_1,
      SR.ACCR_1,
      SR.BEV_1,
      SR.FOOD_1,
      SR.CLEAN_1,
      SR.ABVBYD_1,
      SR.RETURN_1,
      SR.CASE_ID_2,
      SR.TRANS_DTM_2,
      SR.TRANS_ID_2,
      SR.WORTH_2,
      SR.CC_2,
      SR.SPEED_2,
      SR.ACCR_2,
      SR.BEV_2,
      SR.FOOD_2,
      SR.CLEAN_2,
      SR.ABVBYD_2,
      SR.RETURN_2
)
SELECT 
      SR2.*,
  SUM(CASE WHEN POS2.BUS_DT < TRUNC(SR2.TRANS_DTM_2) THEN POS2.GROSS_REV_LCL_AMT ELSE NULL END) AS SPEND_PRE_15D_2,
  SUM(CASE WHEN POS2.BUS_DT > TRUNC(SR2.TRANS_DTM_2) THEN POS2.GROSS_REV_LCL_AMT ELSE NULL END) AS SPEND_POST_15D_2,
  COUNT(DISTINCT CASE WHEN POS2.BUS_DT < TRUNC(SR2.TRANS_DTM_2) THEN POS2.TRANS_ID ELSE NULL END) AS VISITS_PRE_15D_2,
  COUNT(DISTINCT CASE WHEN POS2.BUS_DT > TRUNC(SR2.TRANS_DTM_2) THEN POS2.TRANS_ID ELSE NULL END) AS VISITS_POST_15D_2
  FROM SR2
  LEFT OUTER JOIN APPCA.F_POS_HDR POS2
  ON SR2.GUID_USER_ID = POS2.GUID_ID
  AND POS2.BUS_DT >= TRUNC(SR2.TRANS_DTM_2)- INTERVAL'15'DAY 
  AND POS2.BUS_DT <= TRUNC(SR2.TRANS_DTM_2)+ INTERVAL'15'DAY 
  GROUP BY 
  SR2.GUID_USER_ID,
      SR2.CASE_ID_1,
      SR2.TRANS_DTM_1,
      SR2.TRANS_ID_1,
      SR2.WORTH_1,
      SR2.CC_1,
      SR2.SPEED_1,
      SR2.ACCR_1,
      SR2.BEV_1,
      SR2.FOOD_1,
      SR2.CLEAN_1,
      SR2.ABVBYD_1,
      SR2.RETURN_1,
      SR2.SPEND_PRE_15D_1,
      SR2.SPEND_POST_15D_1,
      SR2.ROWS_SPEND_POST_15D_1,
      SR2.VISITS_PRE_15D_1,
      SR2.VISITS_POST_15D_1,
      SR2.CASE_ID_2,
      SR2.TRANS_DTM_2,
      SR2.TRANS_ID_2,
      SR2.WORTH_2,
      SR2.CC_2,
      SR2.SPEED_2,
      SR2.ACCR_2,
      SR2.BEV_2,
      SR2.FOOD_2,
      SR2.CLEAN_2,
      SR2.ABVBYD_2,
      SR2.RETURN_2